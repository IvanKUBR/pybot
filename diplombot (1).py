# pip install pytelegrambotapi

# pip install beautifulsoup4

# pip install requests

# !pip install selenium
# !apt-get update
# !apt install -y chromium-chromedriver

# !pip install --upgrade selenium
# !apt-get update
# !apt install -y chromium-chromedriver

# pip install xlrd

import telebot
import random
from openpyxl import load_workbook
import time
from telebot import types
import requests
from bs4 import BeautifulSoup
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
import pandas as pd
import xlrd
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.keys import Keys
from openpyxl.utils import get_column_letter
from urllib.parse import urljoin
from urllib.request import urlretrieve
import os
from PIL import ImageGrab
from openpyxl import Workbook
import win32com.client as win32
from spire.xls import *
from spire.xls.common import *
import xlwings as xw

bot = telebot.TeleBot('6551232828:AAGHHErdbGQEyFW7fZKdK_9uatLx7sNDj8U')
api_weather = "4dd800010f75e613d40eef88ca54cd40"
city_name = 'London'

class UserState:
    def __init__(self):
        self.institute = None
        self.group = None
        self.course = None

user_states = {}
chat_states = {}

@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç!\n\n\u2005\u2005*–Ø –°—Ç—É–¥–µ–Ω—Ç–æ–°–ø–∞—Å–∏—Ç–µ–ª—å - —Ü–∏—Ñ—Ä–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫*üòé\u2005\u2005\n\n–Ø –ø–æ–º–æ–≥–∞—é —Å—Ç—É–¥–µ–Ω—Ç–∞–º –∏ –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–∞–º –ë–ì–ò–¢–£ –±—ã—Å—Ç—Ä–æ –Ω–∞—Ö–æ–¥–∏—Ç—å –Ω—É–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. –°–∫–æ—Ä–µ–µ –≤—ã–±–∏—Ä–∞–π —Ä–∞–∑–¥–µ–ª –≤ –ì–ª–∞–≤–Ω–æ–º –º–µ–Ω—é ‚Äì —è –∑–Ω–∞—é –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ –ø—Ä–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç!', parse_mode='Markdown')

@bot.message_handler(commands=['menu'])
def menu_message(message):
    markup = types.InlineKeyboardMarkup(row_width=1)
    btn1 = types.InlineKeyboardButton(text="–ê–±–∏—Ç—É—Ä–∏–µ–Ω—Ç", callback_data ='first')
    btn2 = types.InlineKeyboardButton(text="–°—Ç—É–¥–µ–Ω—Ç", callback_data ='second')
    btn3 = types.InlineKeyboardButton(text="–®–∫–æ–ª—å–Ω–∏–∫", callback_data ='thirst')
    markup.add(btn1, btn2, btn3)
    bot.send_message(message.chat.id, '–ò —Ç–∞–∫, —Ç—ã —É –Ω–∞—Å...', reply_markup=markup)

@bot.message_handler(commands=['menu'])
def menu_message_vozvrat(message):
    markup = types.InlineKeyboardMarkup(row_width=1)
    btn1 = types.InlineKeyboardButton(text="–ê–±–∏—Ç—É—Ä–∏–µ–Ω—Ç", callback_data ='first')
    btn2 = types.InlineKeyboardButton(text="–°—Ç—É–¥–µ–Ω—Ç", callback_data ='second')
    btn3 = types.InlineKeyboardButton(text="–®–∫–æ–ª—å–Ω–∏–∫", callback_data ='thirst')
    markup.add(btn1, btn2, btn3)
    bot.send_message(message.chat.id, '*–í–æ—Ç –∏ —Å–Ω–æ–≤–∞ –≤ –º–µ–Ω—é.*\n\n–ù–∞–≤–∏–≥–∞—Ü–∏—è –∑–¥–µ—Å—å –ø—Ä–æ—Å—Ç–∞, –≤—ã–±–∏—Ä–∞–π —Å–≤–æ–π –ø—É—Ç—å.', reply_markup=markup, parse_mode='Markdown')
# –û–ë–†–ê–ë–û–¢–ö–ê –ê–ë–ò–¢–£–†–ò–ï–ù–¢–ê –ò –î–ê–õ–¨–ù–ï–ô–®–ò–ï –ö–ù–û–ü–ö–ò –° –ù–ò–ú
                                   #–®–ö–û–õ–¨–ù–ò–ö
@bot.callback_query_handler(func=lambda call: call.data == 'thirst')
def abiturient_menu(call):
    markup = types.InlineKeyboardMarkup(row_width=2)
    btn1 = types.InlineKeyboardButton(text="–°–∞–π—Ç —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞", url='http://www.bgitu.ru/')
    btn2 = types.InlineKeyboardButton(text="–û–±—ä—è–≤–ª–µ–Ω–∏—è", url='http://bgitu.ru/schoolboys/')
    btn3 = types.InlineKeyboardButton(text="–ö—É—Ä—Å—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –ï–ì–≠", url='http://bgitu.ru/schoolboys/kursy-podgotovki-k-ege/')
    btn4 = types.InlineKeyboardButton(text="–ö–æ–¥ –±—É–¥—É—â–µ–≥–æ", url="http://bgitu.ru/schoolboys/kod-budushchego/")
    btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='back_to_menu')
    markup.add(btn1, btn2, btn3, btn4, btn6)
    bot.send_message(call.message.chat.id, '–ß—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—É—é —Ç–µ–±–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –≤—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª:', reply_markup=markup)
                                   #–®–ö–û–õ–¨–ù–ò–ö
                                   #–ê–ë–ò–¢–£–†–ò–ï–ù–¢
@bot.callback_query_handler(func=lambda call: call.data == 'first')
def abiturient_menu(call):
    markup = types.InlineKeyboardMarkup(row_width=1)
    btn1 = types.InlineKeyboardButton(text="–°–∞–π—Ç —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞", url='http://www.bgitu.ru/')
    btn2 = types.InlineKeyboardButton(text="–ü—Ä–∏–µ–º–Ω–∞—è –∫–æ–º–∏—Å—Å–∏—è", callback_data ='comis')
    btn3 = types.InlineKeyboardButton(text="–ë–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç/–°–ø–µ—Ü–∏–∞–ª–∏—Ç–µ—Ç", callback_data ='baknspec')
    btn4 = types.InlineKeyboardButton(text="–ú–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞", url="http://www.bgitu.ru/abitur/magistr/")
    btn5 = types.InlineKeyboardButton(text="–ê—Å–ø–∏—Ä–∞–Ω—Ç—É—Ä–∞", url="http://www.bgitu.ru/abitur/aspirant/")
    btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='back_to_menu')
    markup.add(btn1, btn2, btn3, btn4, btn5, btn6)
    bot.send_message(call.message.chat.id, '–ß—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—É—é —Ç–µ–±–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –≤—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª:\n\n–¢–∞–∫–∂–µ –º—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Ç–µ–±–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –õ–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –±—É–¥—É—â–µ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞ –ë–ì–ò–¢–£, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ü–µ—Å—Å–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –∏ –∑–∞—á–∏—Å–ª–µ–Ω–∏—è, —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å —Å–≤–æ–µ –≤—Ä–µ–º—è –ø—Ä–∏ –ø–æ–¥–∞—á–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.', reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data == 'comis')
def comis_menu(call):
    markup = types.InlineKeyboardMarkup(row_width=1)
    btn1 = types.InlineKeyboardButton(text="–ö–∞–∫ –ø–æ–¥–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã –æ–Ω–ª–∞–π–Ω", url='http://www.bgitu.ru/')
    btn2 = types.InlineKeyboardButton(text="–°—Ä–æ–∫–∏ –ø–æ–¥–∞—á–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤", callback_data ='srokpod')
    btn3 = types.InlineKeyboardButton(text="–ü–ª–∞–Ω –ø—Ä–∏–µ–º–∞", url="http://www.bgitu.ru/abitur/")
    btn4 = types.InlineKeyboardButton(text="–î–æ–∫—É–º–µ–Ω—Ç—ã, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–ª—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è", callback_data ='docmust')
    btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='naz_to_first')
    btn7 = types.InlineKeyboardButton(text="–ú–µ–Ω—éüìñ", callback_data ='back_to_menu')
    markup.add(btn1, btn2, btn3, btn4, btn6, btn7)
    bot.send_message(call.message.chat.id, '–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏', reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data == 'baknspec')
def baknspec_menu(call):
    markup = types.InlineKeyboardMarkup(row_width=1)
    btn1 = types.InlineKeyboardButton(text="–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏", url='http://www.bgitu.ru/abitur/napravleniya-podgotovki-/')
    btn2 = types.InlineKeyboardButton(text="–ò–Ω—Å—Ç–∏—Ç—É—Ç—ã", url='http://www.bgitu.ru/universitet/instituty/')
    btn3 = types.InlineKeyboardButton(text="–°–ø–µ—Ü–∏–∞–ª–∏—Ç–µ—Ç", url="http://bgitu.ru/abitur/special/")
    btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='naz_to_first')
    btn7 = types.InlineKeyboardButton(text="–ú–µ–Ω—éüìñ", callback_data ='back_to_menu')
    markup.add(btn1, btn2, btn3, btn6, btn7)
    bot.send_message(call.message.chat.id, '*–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏:*', reply_markup=markup, parse_mode='Markdown')

@bot.callback_query_handler(func=lambda call: call.data == 'srokpod')
def srok_menu(call):
    markup = types.InlineKeyboardMarkup(row_width=1)
    btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='naz_to_comis')
    btn7 = types.InlineKeyboardButton(text="–ú–µ–Ω—éüìñ", callback_data ='back_to_menu')
    markup.add(btn6, btn7)
    bot.send_message(call.message.chat.id, '–°—Ä–æ–∫ –ø–æ–¥–∞—á–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω: –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –æ–Ω –¥–ª—è –≤—Å–µ—Ö –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤ 20 –∏—é–Ω—è, –∞ –≤–æ—Ç —Å—Ä–æ–∫ –æ–∫–æ–Ω—á–∞–Ω–∏—è –Ω—É–∂–Ω–æ —É—Ç–æ—á–Ω–∏—Ç—å\n\nüî¥*–ò—Å–∫–ª—é—á–µ–Ω–∏–µ: —Å –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∏—Å–ø—ã—Ç–∞–Ω–∏—è–º–∏,'
    '–ø—Ä–æ–≤–æ–¥–∏–º—ã–º–∏ –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–æ–º –ø—Ä–∏–µ–º –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è 18 –∏—é–Ω—è (–û—á–Ω–∞—è —Ñ–æ—Ä–º–∞ –æ–±—É—á–µ–Ω–∏—è)*\n\n*–°—Ä–æ–∫–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø—Ä–∏–µ–º–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:*\n\nüö©–û—á–Ω–∞—è —Ñ–æ—Ä–º–∞ –æ–±—É—á–µ–Ω–∏—è\n-–ë–µ–∑ –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã—Ö –∏—Å–ø—ã—Ç–∞–Ω–∏–π/—Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ï–ì–≠ - 25 –∏—é–ª—è\n'
    '-–° –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∏—Å–ø—ã—Ç–∞–Ω–∏—è–º–∏, –ø—Ä–æ–≤–æ–¥–∏–º—ã–º–∏ –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–æ–º - 12 –∏—é–ª—è\n\nüö©–ó–∞–æ—á–Ω–∞—è —Ñ–æ—Ä–º–∞ –æ–±—É—á–µ–Ω–∏—è\n-–ë–µ–∑ –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã—Ö –∏—Å–ø—ã—Ç–∞–Ω–∏–π/—Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ï–ì–≠/–° –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∏—Å–ø—ã—Ç–∞–Ω–∏—è–º–∏, –ø—Ä–æ–≤–æ–¥–∏–º—ã–º–∏ –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–æ–º - 10 –∞–≤–≥—É—Å—Ç–∞\n'
    '-–° –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∏—Å–ø—ã—Ç–∞–Ω–∏—è–º–∏, –ø—Ä–æ–≤–æ–¥–∏–º—ã–º–∏ –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–æ–º (–≤—Ç–æ—Ä–æ–µ –≤—ã—Å—à–µ–µ) - 15 —Å–µ–Ω—Ç—è–±—Ä—è\n\nüö©–ú–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞\n-–°—Ä–æ–∫ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø—Ä–∏–µ–º–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ - 30 –∏—é–ª—è', reply_markup=markup, parse_mode='Markdown')

@bot.callback_query_handler(func=lambda call: call.data == 'docmust')
def srok_menu(call):
    markup = types.InlineKeyboardMarkup(row_width=1)
    btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='naz_to_comis')
    btn7 = types.InlineKeyboardButton(text="–ú–µ–Ω—éüìñ", callback_data ='back_to_menu')
    markup.add(btn6, btn7)
    bot.send_message(call.message.chat.id, '–ü–æ—Å—Ç—É–ø–∞—é—â–∏–µ –Ω–∞ 1-–π –∫—É—Ä—Å –ë–ì–ò–¢–£ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç –≤ –ø—Ä–∏—ë–º–Ω—É—é –∫–æ–º–∏—Å—Å–∏—é —Å–ª–µ–¥—É—é—â–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã:\n\n1. *–ó–∞—è–≤–ª–µ–Ω–∏–µ* (–∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ) –Ω–∞ –∏–º—è —Ä–µ–∫—Ç–æ—Ä–∞ –æ –ø—Ä–∏—ë–º–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤,'
    ' –æ –¥–æ–ø—É—Å–∫–µ –∫ —É—á–∞—Å—Ç–∏—é –≤ –∫–æ–Ω–∫—É—Ä—Å–µ (–≤—ã–±—Ä–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ / —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ —É–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –≤ –ó–∞—è–≤–ª–µ–Ω–∏–∏ –≤ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ–º –¥–ª—è –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–∞ –ø–æ—Ä—è–¥–∫–µ) –∏ –æ —Å–æ–≥–ª–∞—Å–∏–∏ –Ω–∞ –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –ø–æ –∫–æ–Ω–∫—É—Ä—Å—É;\n'
    '2. –ü—Ä–µ–¥—ä—è–≤–ª—è—é—Ç *–ø–∞—Å–ø–æ—Ä—Ç* –∏–ª–∏ –µ–≥–æ –∫–æ–ø–∏—é (—Å—Ç—Ä–∞–Ω–∏—Ü—ã 2 –∏ 3 —Å –ª–∏—á–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏);\n'
    '3. *–û—Ä–∏–≥–∏–Ω–∞–ª –¥–æ–∫—É–º–µ–Ω—Ç–∞* —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –æ–±—Ä–∞–∑—Ü–∞ –æ–± –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ –∏–ª–∏ –µ–≥–æ –∫–æ–ø–∏—é (–¥–ª—è –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤ —Å –æ—Å–æ–±—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏ –ø—Ä–∏—ë–º–∞ –±–µ–∑ –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã—Ö –∏—Å–ø—ã—Ç–∞–Ω–∏–π, –Ω–∞ –º–µ—Å—Ç–∞ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –æ—Å–æ–±–æ–π (10 %) –∫–≤–æ—Ç—ã) —Å—Ä–∞–∑—É –Ω–µ–æ–±—Ö–æ–¥–∏–º –æ—Ä–∏–≥–∏–Ω–∞–ª;\n'
    '4. *–ö–æ–ø–∏–∏ –¥–∏–ø–ª–æ–º–æ–≤ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –∏–ª–∏ –ø—Ä–∏–∑—ë—Ä–æ–≤ –æ–ª–∏–º–ø–∏–∞–¥ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤*, –¥–∞—é—â–∏—Ö –æ—Å–æ–±—ã–µ –ø—Ä–∞–≤–∞ –Ω–∞ –ø—Ä–∏—ë–º –±–µ–∑ –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã—Ö –∏—Å–ø—ã—Ç–∞–Ω–∏–π –∏–ª–∏ –Ω–∞ —É—á–∞—Å—Ç–∏–µ –≤ –∫–æ–Ω–∫—É—Ä—Å–µ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ–π –æ—Ü–µ–Ω–∫–æ–π –≤ 100 –±–∞–ª–ª–æ–≤ –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º—É –ø—Ä–æ—Ñ–∏–ª—é –æ–ª–∏–º–ø–∏–∞–¥—ã;\n'
    '*–∫–æ–ø–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ–µ –Ω–∞–ª–∏—á–∏–µ —É –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤ –ø—Ä–∞–≤:*\n ‚ûñ–Ω–∞ –ø—Ä–∏—ë–º –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã—Ö –∏—Å–ø—ã—Ç–∞–Ω–∏–π, –ø—Ä–æ–≤–æ–¥–∏–º—ã—Ö –ë–ì–ò–¢–£ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ;\n'
    ' ‚ûñ–Ω–∞ –ø—Ä–∏—ë–º –Ω–∞ –º–µ—Å—Ç–∞ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –æ—Å–æ–±–æ–π (10 %) –∫–≤–æ—Ç—ã;\n -–ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø—Ä–∞–≤–æ –∑–∞—á–∏—Å–ª–µ–Ω–∏—è;\n ‚ûñ–∫–æ–ø–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏—Ö –Ω–∞–ª–∏—á–∏–µ —É –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π, –æ—Ü–µ–Ω–∏–≤–∞–µ–º—ã—Ö –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –±–∞–ª–ª–∞–º–∏;\n'
    '5. *4 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ 3—Ö4* -  –ø—Ä–∏ –ø–æ–¥–∞—á–µ –æ—Ä–∏–≥–∏–Ω–∞–ª–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –æ–± –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏;\n6.*6 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π 3—Ö4*  - –¥–ª—è —Å–¥–∞—é—â–∏—Ö —ç–∫–∑–∞–º–µ–Ω—ã, –ø—Ä–æ–≤–æ–¥–∏–º—ã–µ –ë–ì–ò–¢–£ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ;\n-*–¥—Ä—É–≥–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã*, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä—ã—Ö –æ—Ç–≤–µ—á–∞–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å–∞–º –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤.\n'
    '–ó–∞—è–≤–ª–µ–Ω–∏–µ –æ –ø—Ä–∏—ë–º–µ –∏, –≤ —á–∞—Å—Ç–Ω–æ—Å—Ç–∏, —É–∫–∞–∑—ã–≤–∞–µ–º—ã–µ –≤ –Ω—ë–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ / —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –¥–æ 26 –∏—é–ª—è –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –º–æ–≥—É—Ç –±—ã—Ç—å –∏–∑–º–µ–Ω–µ–Ω—ã –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–º.\n‚ùóÔ∏è*–ö–æ–ø–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —É –Ω–æ—Ç–∞—Ä–∏—É—Å–∞ –∑–∞–≤–µ—Ä—è—Ç—å –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.*‚ùóÔ∏è', reply_markup=markup, parse_mode='Markdown')

                                   #–ê–ë–ò–¢–£–†–ò–ï–ù–¢

@bot.callback_query_handler(func=lambda call: call.data == 'naz_to_comis')
def naz_to_comis(call):
    comis_menu(call)

@bot.callback_query_handler(func=lambda call: call.data == 'naz_to_first')
def back_to_first(call):
    abiturient_menu(call)


@bot.callback_query_handler(func=lambda call: call.data == 'back_to_menu')
def back_to_menu(call):
    menu_message_vozvrat(call.message)

# –û–ë–†–ê–ë–û–¢–ö–ê –ê–ë–ò–¢–£–†–ò–ï–ù–¢–ê –ò –î–ê–õ–¨–ù–ï–ô–®–ò–ï –ö–ù–û–ü–ö–ò –° –ù–ò–ú
                                   #–û–ë–†–ê–ë–û–¢–ö–ê –°–¢–£–î–ï–ù–¢–ê –ò –î–ê–õ–¨–ù–ï–ô–®–ò–ï –ö–ù–û–ü–ö–ò –° –ù–ò–ú

@bot.callback_query_handler(func=lambda call: call.data == 'second')
def student_menu(call):
    markup = types.InlineKeyboardMarkup(row_width=2)
    btn1 = types.InlineKeyboardButton(text="–î–∞", callback_data ='verot')
    btn2 = types.InlineKeyboardButton(text="–ù–µ—Ç", callback_data ='back_to_menu')
    markup.add(btn1, btn2)
    bot.send_message(call.message.chat.id,'*–¢—ã —Ç–æ—á–Ω–æ —Å—Ç—É–¥–µ–Ω—Ç?*ü§®', reply_markup=markup, parse_mode='Markdown')

@bot.callback_query_handler(func=lambda call: call.data == 'verot')
def perex_to_reg(call):
    markup = types.InlineKeyboardMarkup(row_width=3)
    btn1 = types.InlineKeyboardButton(text="–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π –∏–Ω—Å—Ç–∏—Ç—É—Ç", callback_data ='stroy_inst')
    btn2 = types.InlineKeyboardButton(text="–ò–Ω—Å—Ç–∏—Ç—É—Ç –ª–µ—Å–Ω–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Å–∞", callback_data ='les_inst')
    btn3 = types.InlineKeyboardButton(text="–ò–Ω–∂–µ–Ω–µ—Ä–Ω–æ-—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π –∏–Ω—Å—Ç–∏—Ç—É—Ç", callback_data ='inger_inst')
    btn4 = types.InlineKeyboardButton(text="–ú–µ–Ω—éüìñ", callback_data ='back_to_menu')
    markup.add(btn1, btn2, btn3, btn4)
    bot.send_message(call.message.chat.id, '–¢–∞–∫, —Å—Ç—É–¥–µ–Ω—Ç, –≤—ã–±–µ—Ä–∏ —Å–≤–æ–π –∏–Ω—Å—Ç–∏—Ç—É—Ç:', reply_markup=markup, parse_mode='Markdown')

@bot.callback_query_handler(func=lambda call: call.data in ['stroy_inst', 'les_inst', 'inger_inst'])
def group_menu(call):
    rus_inst = {
        'stroy_inst': '–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π –∏–Ω—Å—Ç–∏—Ç—É—Ç',
        'les_inst': '–ò–Ω—Å—Ç–∏—Ç—É—Ç –ª–µ—Å–Ω–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Å–∞, –ª–∞–Ω–¥—à–∞—Ñ—Ç–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã, —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –∏ —ç–∫–æ–ª–æ–≥–∏–∏',
        'inger_inst': '–ò–Ω–∂–µ–Ω–µ—Ä–Ω–æ-—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π –∏–Ω—Å—Ç–∏—Ç—É—Ç'
    }
    user_id = call.from_user.id
    user_states[user_id] = UserState()
    user_states[user_id].institute = rus_inst[call.data]
    if user_states[user_id].institute == "–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π –∏–Ω—Å—Ç–∏—Ç—É—Ç":
        markup = types.ForceReply(selective=False)
        markup = types.InlineKeyboardMarkup(row_width=3)
        btn1 = types.InlineKeyboardButton(text="–ü–ì–°", callback_data ='pgs_group')
        btn2 = types.InlineKeyboardButton(text="–ì–°–•", callback_data ='gsx_group')
        btn3 = types.InlineKeyboardButton(text="–¢–ì–°–í", callback_data ='tgsv_group')
        btn4 = types.InlineKeyboardButton(text="–ü–°–ö", callback_data ='psk_group')
        btn5 = types.InlineKeyboardButton(text="–ê–î", callback_data ='ad_group')
        btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='back_to_inst')
        markup.add(btn1, btn2, btn3, btn4, btn5, btn6)
        bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏ —Å–≤–æ—é –≥—Ä—É–ø–ø—É', reply_markup=markup, parse_mode='Markdown')
    if user_states[user_id].institute == "–ò–Ω—Å—Ç–∏—Ç—É—Ç –ª–µ—Å–Ω–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Å–∞, –ª–∞–Ω–¥—à–∞—Ñ—Ç–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã, —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –∏ —ç–∫–æ–ª–æ–≥–∏–∏":
        markup = types.ForceReply(selective=False)
        markup = types.InlineKeyboardMarkup(row_width=3)
        btn1 = types.InlineKeyboardButton(text="–ú–ú", callback_data ='mm_group')
        btn2 = types.InlineKeyboardButton(text="–ú–õ–ü", callback_data ='mlp_group')
        btn3 = types.InlineKeyboardButton(text="–¢–î", callback_data ='td_group')
        btn4 = types.InlineKeyboardButton(text="–¢–ë", callback_data ='tb_group')
        btn5 = types.InlineKeyboardButton(text="–≠–†–°–ü", callback_data ='ersp_group')
        btn6 = types.InlineKeyboardButton(text="–õ–•", callback_data ='lx_group')
        btn7 = types.InlineKeyboardButton(text="–õ–ê", callback_data ='la_group')
        btn8 = types.InlineKeyboardButton(text="–°–ê–î", callback_data ='sad_group')
        btn9 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='back_to_inst')
        markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8, btn9)
        bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏ —Å–≤–æ—é –≥—Ä—É–ø–ø—É', reply_markup=markup, parse_mode='Markdown')
    if user_states[user_id].institute == "–ò–Ω–∂–µ–Ω–µ—Ä–Ω–æ-—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π –∏–Ω—Å—Ç–∏—Ç—É—Ç":
        block1 = 1
        if block1 == 1:
            markup = types.ForceReply(selective=False)
            markup = types.InlineKeyboardMarkup(row_width=2)
            btn1 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='back_to_inst')
            markup.add(btn1)
            bot.send_message(call.message.chat.id,'–í–∞—à —Ä–∞—Å–¥–µ–ª —Å–µ–π—á–∞—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω', reply_markup=markup, parse_mode='Markdown')
        else:
            markup = types.ForceReply(selective=False)
            markup = types.InlineKeyboardMarkup(row_width=2)
            btn1 = types.InlineKeyboardButton(text="–ò–í–¢", callback_data ='ivt_group')
            btn2 = types.InlineKeyboardButton(text="–ò–°–¢", callback_data ='ist_group')
            btn3 = types.InlineKeyboardButton(text="–ü—Ä–ò", callback_data ='pri_group')
            btn4 = types.InlineKeyboardButton(text="–≠–∫–æ–Ω", callback_data ='econ_group')
            btn5 = types.InlineKeyboardButton(text="–ü–ò", callback_data ='pi_group')
            btn6 = types.InlineKeyboardButton(text="–ì–ú–£", callback_data ='gmu_group')
            btn7 = types.InlineKeyboardButton(text="–≠–ë", callback_data ='eb_group')
            btn8 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='back_to_inst')
            markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8)
            bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏ —Å–≤–æ—é –≥—Ä—É–ø–ø—É', reply_markup=markup, parse_mode='Markdown')

#####################################################–ò–ù–ñ-–≠–ö–û–ù#######################################################

@bot.callback_query_handler(func=lambda call: call.data in ['ivt_group', 'ist_group', 'pri_group', 'econ_group', 'pi_group', 'gmu_group', 'eb_group'])
def process_group_selection11(call):
    rus_gr = {
        'ivt_group': '–ò–í–¢',
        'ist_group': '–ò–°–¢',
        'pri_group': '–ü–†–ò',
        'econ_group': '–≠–∫–æ–Ω',
        'pi_group': '–ü–ò',
        'gmu_group': '–ì–ú–£',
        'eb_group': '–≠–ë'
    }
    user_id = call.from_user.id
    user_states[user_id].group = rus_gr[call.data]

    markup = types.ForceReply(selective=False)
    markup = types.InlineKeyboardMarkup(row_width=5)
    btn1 = types.InlineKeyboardButton(text="1 –∫—É—Ä—Å", callback_data ='first_group2')
    btn2 = types.InlineKeyboardButton(text="2 –∫—É—Ä—Å", callback_data ='sec_group2')
    btn3 = types.InlineKeyboardButton(text="3 –∫—É—Ä—Å", callback_data ='thr_group2')
    btn4 = types.InlineKeyboardButton(text="4 –∫—É—Ä—Å", callback_data ='four_group2')
    btn5 = types.InlineKeyboardButton(text="–ú–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞", callback_data ='magiss_group2')
    btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='group_menu')
    markup.add(btn1, btn2, btn3, btn4, btn5, btn6)
    bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –∫—É—Ä—Å', reply_markup=markup, parse_mode='Markdown')

@bot.callback_query_handler(func=lambda call: call.data in ['first_group2', 'sec_group2', 'thr_group2', 'four_group2', 'magiss_group2'])
def process_group_selection12(call):
    rus_cr = {
        'first_group2': '1',
        'sec_group2': '2',
        'thr_group2': '3',
        'four_group2': '4',
        'magiss_group2': '–ú–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞'
    }
    user_id = call.from_user.id
    user_states[user_id].course = rus_cr[call.data]
    institute = user_states[user_id].institute
    group = user_states[user_id].group
    course = user_states[user_id].course
    if (course == "4") and (group == "–ü–ì–°" or group == "–ì–°–•" or group == "–¢–ì–°–í" or group == "–ê–î"):
        file_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps\raspisonstr.xls"
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
        if os.path.exists(file_path):
            # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º –µ–≥–æ
            os.remove(file_path)
        base_url = "https://bgitu.ru/studentu/raspisanie/ochnoe-obuchenie/2024/rv-2/"
        url = "https://bgitu.ru/studentu/raspisanie/ochnoe-obuchenie/2024/rv-2/"  # –≤—Ç–æ—Ä–æ–π —Ä–∞–∑ —É–∫–∞–∑—ã–≤–∞–µ–º url, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Å—ã–ª–∫–∏
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º GET-–∑–∞–ø—Ä–æ—Å –∏ –ø–æ–ª—É—á–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        response = requests.get(url)
        html_content = response.content
        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç BeautifulSoup –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ HTML
        soup = BeautifulSoup(html_content, "html.parser")
        # –ù–∞—Ö–æ–¥–∏–º —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –≤ —Ç–µ–≥–µ <a> —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
        link_tag = soup.find("a", string="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ 2 —Å–µ–º–µ—Å—Ç—Ä –ü–ì–° –ì–°–• –ü–°–ö –ê–î –¢–ì–°–í 4 –∫—É—Ä—Å.xls")
        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω —Ç–µ–≥ <a>, –ø–æ–ª—É—á–∞–µ–º –µ–≥–æ URL –∏ –æ–±—ä–µ–¥–∏–Ω—è–µ–º —Å –±–∞–∑–æ–≤—ã–º URL
        if link_tag:
            link_href = link_tag.get("href")
            full_url = urljoin(base_url, link_href)
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª
            save_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps"
            # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
            os.makedirs(save_path, exist_ok=True)
            # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª –ø–æ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–π —Å—Å—ã–ª–∫–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —É–∫–∞–∑–∞–Ω–Ω—É—é –ø–∞–ø–∫—É
            file_path, headers = urlretrieve(full_url, os.path.join(save_path, "raspisonstr.xls"))
        else:
            markup = types.ForceReply(selective=False)
            markup = types.InlineKeyboardMarkup(row_width=5)
            btn1 = types.InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", callback_data ='back_to_inst')
            btn3 = types.InlineKeyboardButton(text="–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–µ–º–∞ –∑–∞–¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π", callback_data ='back_to_inst')
            btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection1')
            markup.add(btn1, btn3, btn6)
            bot.send_message(call.message.chat.id, f'–ò —Ç–∞–∫, –≤—ã: {institute} \n–ì—Ä—É–ø–ø–∞: {group} \n–ö—É—Ä—Å: {course}', parse_mode='Markdown')
            # bot.send_message(call.message.chat.id,'*–ò–Ω—Å—Ç–∏—Ç—É—Ç: ' + institute + '*\n*–ì—Ä—É–ø–ø–∞: ' + group + '*\n–ö—É—Ä—Å: ' + course + '*', parse_mode='Markdown')
            bot.send_message(call.message.chat.id,'–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å–µ–π—á–∞—Å –Ω–µ –ø–æ–ª—É—á–∏—Ç—å—Å—è –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å', reply_markup=markup, parse_mode='Markdown')
            bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª', reply_markup=markup, parse_mode='Markdown')
        save_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps"
        # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        file_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps\raspisonstr.xlsx"
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
        if os.path.exists(file_path):
            # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º –µ–≥–æ
            os.remove(file_path)
        # –ü—É—Ç—å –∫ —Å–∫—Ä–∏–Ω—à–æ—Ç—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        screenshot_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\raspison_rangestr.png"
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç
        if os.path.exists(screenshot_path):
        # –ï—Å–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º –µ–≥–æ
            os.remove(screenshot_path)
        time.sleep(1)
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º .xls —Ñ–∞–π–ª –≤ .xlsx
        excel = win32.gencache.EnsureDispatch('Excel.Application')
        wb = excel.Workbooks.Open(os.path.join(save_path, "raspisonstr.xls"))
        wb.SaveAs(os.path.join(save_path, "raspisonstr.xlsx"), FileFormat=51)
        wb.Close()
        excel.Quit()
        time.sleep(0.5)
        xlsx_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps\raspisonstr.xlsx"
        client = win32.Dispatch("Excel.Application")
        wb = client.Workbooks.Open(xlsx_path)
        ws = wb.ActiveSheet
        print(1)
        ws.Range("A2:I49").CopyPicture(Format = 2)
        img = ImageGrab.grabclipboard()
        img.save(r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\scrffstr.jpg", "jpeg")
        wb.Close()
        client.Quit()
        markup = types.ForceReply(selective=False)
        markup = types.InlineKeyboardMarkup(row_width=5)
        btn1 = types.InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", callback_data ='back_to_inst')
        btn2 = types.InlineKeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data ='raspis13st')
        btn3 = types.InlineKeyboardButton(text="–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–µ–º–∞ –∑–∞–¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π", callback_data ='back_to_inst')
        btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection1')
        markup.add(btn1, btn2, btn3, btn6)
        bot.send_message(call.message.chat.id, f'–ò —Ç–∞–∫, –≤—ã: {institute} \n–ì—Ä—É–ø–ø–∞: {group} \n–ö—É—Ä—Å: {course}', parse_mode='Markdown')
        # bot.send_message(call.message.chat.id,'*–ò–Ω—Å—Ç–∏—Ç—É—Ç: ' + institute + '*\n*–ì—Ä—É–ø–ø–∞: ' + group + '*\n–ö—É—Ä—Å: ' + course + '*', parse_mode='Markdown')
        bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª', reply_markup=markup, parse_mode='Markdown')
    else:
        file_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps\raspisonstr.xls"
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
        if os.path.exists(file_path):
            # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º –µ–≥–æ
            os.remove(file_path)

        base_url = "https://bgitu.ru/studentu/raspisanie/ochnoe-obuchenie/2024/rv-2/"
        url = "https://bgitu.ru/studentu/raspisanie/ochnoe-obuchenie/2024/rv-2/"  # –≤—Ç–æ—Ä–æ–π —Ä–∞–∑ —É–∫–∞–∑—ã–≤–∞–µ–º url, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Å—ã–ª–∫–∏
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º GET-–∑–∞–ø—Ä–æ—Å –∏ –ø–æ–ª—É—á–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        response = requests.get(url)
        html_content = response.content
        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç BeautifulSoup –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ HTML
        soup = BeautifulSoup(html_content, "html.parser")
        # –ù–∞—Ö–æ–¥–∏–º —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –≤ —Ç–µ–≥–µ <a> —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
        link_tag = soup.find("a", string="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ 2 —Å–µ–º–µ—Å—Ç—Ä –ò–í–¢ –ò–°–¢ –ü–ò –ü—Ä–ò –≠–∫–æ–Ω –ì–ú–£ 1-3 –∫. –≠–ë 1-4 –∫..xls")
        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω —Ç–µ–≥ <a>, –ø–æ–ª—É—á–∞–µ–º –µ–≥–æ URL –∏ –æ–±—ä–µ–¥–∏–Ω—è–µ–º —Å –±–∞–∑–æ–≤—ã–º URL
        if link_tag:
            link_href = link_tag.get("href")
            full_url = urljoin(base_url, link_href)
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª
            save_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps"
            # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
            os.makedirs(save_path, exist_ok=True)
            # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª –ø–æ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–π —Å—Å—ã–ª–∫–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —É–∫–∞–∑–∞–Ω–Ω—É—é –ø–∞–ø–∫—É
            file_path, headers = urlretrieve(full_url, os.path.join(save_path, "raspisonstr.xls"))
        else:
            bot.send_message(call.message.chat.id, '–í—Å–µ –ø–ª–æ—Ö–æ')
        save_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps"
        # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        file_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps\raspisonstr.xlsx"
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
        if os.path.exists(file_path):
            # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º –µ–≥–æ
            os.remove(file_path)
        # –ü—É—Ç—å –∫ —Å–∫—Ä–∏–Ω—à–æ—Ç—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        screenshot_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\raspison_rangestr.png"
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç
        if os.path.exists(screenshot_path):
        # –ï—Å–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º –µ–≥–æ
            os.remove(screenshot_path)
        time.sleep(1)
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º .xls —Ñ–∞–π–ª –≤ .xlsx
        excel = win32.gencache.EnsureDispatch('Excel.Application')
        wb = excel.Workbooks.Open(os.path.join(save_path, "raspisonstr.xls"))
        wb.SaveAs(os.path.join(save_path, "raspisonstr.xlsx"), FileFormat=51)
        wb.Close()
        excel.Quit()
        time.sleep(0.5)
        xlsx_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps\raspisonstr.xlsx"
        client = win32.Dispatch("Excel.Application")
        wb = client.Workbooks.Open(xlsx_path)
        ws = wb.ActiveSheet

        if (course == "1") and (group == "–ò–í–¢"):
            print(1)
            ws.Range("A2:F43").CopyPicture(Format = 2)
            img = ImageGrab.grabclipboard()
            img.save(r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\scrffstr.jpg", "jpeg")
            wb.Close()
            client.Quit()
            markup = types.ForceReply(selective=False)
            markup = types.InlineKeyboardMarkup(row_width=2)
            btn1 = types.InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", callback_data ='back_to_inst')
            btn2 = types.InlineKeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data ='raspis13st')
            btn3 = types.InlineKeyboardButton(text="–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–µ–º–∞ –∑–∞–¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π", callback_data ='back_to_inst')
            btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection1')
            markup.add(btn1, btn2, btn3, btn6)
            bot.send_message(call.message.chat.id, f'–ò —Ç–∞–∫, –≤—ã: {institute} \n–ì—Ä—É–ø–ø–∞: {group} \n–ö—É—Ä—Å: {course}', parse_mode='Markdown')
            # bot.send_message(call.message.chat.id,'*–ò–Ω—Å—Ç–∏—Ç—É—Ç: ' + institute + '*\n*–ì—Ä—É–ø–ø–∞: ' + group + '*\n–ö—É—Ä—Å: ' + course + '*', parse_mode='Markdown')
            bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª', reply_markup=markup, parse_mode='Markdown')
        if (course == "2") and (group == "–ò–í–¢"):
            print(2)
            ws.Range("G2:H42").CopyPicture(Format = 2)
            img = ImageGrab.grabclipboard()
            img.save(r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\scrffstr.jpg", "jpeg")
            wb.Close()
            client.Quit()
            markup = types.ForceReply(selective=False)
            markup = types.InlineKeyboardMarkup(row_width=2)
            btn1 = types.InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", callback_data ='back_to_inst')
            btn2 = types.InlineKeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data ='raspis13st')
            btn3 = types.InlineKeyboardButton(text="–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–µ–º–∞ –∑–∞–¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π", callback_data ='back_to_inst')
            btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection1')
            markup.add(btn1, btn2, btn3, btn6)
            bot.send_message(call.message.chat.id, f'–ò —Ç–∞–∫, –≤—ã: {institute} \n–ì—Ä—É–ø–ø–∞: {group} \n–ö—É—Ä—Å: {course}', parse_mode='Markdown')
            # bot.send_message(call.message.chat.id,'*–ò–Ω—Å—Ç–∏—Ç—É—Ç: ' + institute + '*\n*–ì—Ä—É–ø–ø–∞: ' + group + '*\n–ö—É—Ä—Å: ' + course + '*', parse_mode='Markdown')
            bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª', reply_markup=markup, parse_mode='Markdown')
        if (course == "3") and (group == "–ò–í–¢"):
            print(3)
            ws.Range("I2:J45").CopyPicture(Format = 2)
            img = ImageGrab.grabclipboard()
            img.save(r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\scrffstr.jpg", "jpeg")
            wb.Close()
            client.Quit()
            markup = types.ForceReply(selective=False)
            markup = types.InlineKeyboardMarkup(row_width=2)
            btn1 = types.InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", callback_data ='back_to_inst')
            btn2 = types.InlineKeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data ='raspis13st')
            btn3 = types.InlineKeyboardButton(text="–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–µ–º–∞ –∑–∞–¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π", callback_data ='back_to_inst')
            btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection1')
            markup.add(btn1, btn2, btn3, btn6)
            bot.send_message(call.message.chat.id, f'–ò —Ç–∞–∫, –≤—ã: {institute} \n–ì—Ä—É–ø–ø–∞: {group} \n–ö—É—Ä—Å: {course}', parse_mode='Markdown')
            # bot.send_message(call.message.chat.id,'*–ò–Ω—Å—Ç–∏—Ç—É—Ç: ' + institute + '*\n*–ì—Ä—É–ø–ø–∞: ' + group + '*\n–ö—É—Ä—Å: ' + course + '*', parse_mode='Markdown')
            bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª', reply_markup=markup, parse_mode='Markdown')
        if (course == "1" or course == "2" or course == "3" ) and (group == "–ò–°–¢"):
            print(1)
            ws.Range("K2:M45").CopyPicture(Format = 2)
            img = ImageGrab.grabclipboard()
            img.save(r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\scrffstr.jpg", "jpeg")
            wb.Close()
            client.Quit()
            markup = types.ForceReply(selective=False)
            markup = types.InlineKeyboardMarkup(row_width=2)
            btn1 = types.InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", callback_data ='back_to_inst')
            btn2 = types.InlineKeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data ='raspis13st')
            btn3 = types.InlineKeyboardButton(text="–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–µ–º–∞ –∑–∞–¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π", callback_data ='back_to_inst')
            btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection1')
            markup.add(btn1, btn2, btn3, btn6)
            bot.send_message(call.message.chat.id, f'–ò —Ç–∞–∫, –≤—ã: {institute} \n–ì—Ä—É–ø–ø–∞: {group} \n–ö—É—Ä—Å: {course}', parse_mode='Markdown')
            # bot.send_message(call.message.chat.id,'*–ò–Ω—Å—Ç–∏—Ç—É—Ç: ' + institute + '*\n*–ì—Ä—É–ø–ø–∞: ' + group + '*\n–ö—É—Ä—Å: ' + course + '*', parse_mode='Markdown')
            bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª', reply_markup=markup, parse_mode='Markdown')
        if (course == "1" or course == "2" or course == "3" ) and (group == "–ò–°–¢"):
            print(1)
            ws.Range("N2:P43").CopyPicture(Format = 2)
            img = ImageGrab.grabclipboard()
            img.save(r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\scrffstr.jpg", "jpeg")
            wb.Close()
            client.Quit()
            markup = types.ForceReply(selective=False)
            markup = types.InlineKeyboardMarkup(row_width=2)
            btn1 = types.InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", callback_data ='back_to_inst')
            btn2 = types.InlineKeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data ='raspis13st')
            btn3 = types.InlineKeyboardButton(text="–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–µ–º–∞ –∑–∞–¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π", callback_data ='back_to_inst')
            btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection1')
            markup.add(btn1, btn2, btn3, btn6)
            bot.send_message(call.message.chat.id, f'–ò —Ç–∞–∫, –≤—ã: {institute} \n–ì—Ä—É–ø–ø–∞: {group} \n–ö—É—Ä—Å: {course}', parse_mode='Markdown')
            # bot.send_message(call.message.chat.id,'*–ò–Ω—Å—Ç–∏—Ç—É—Ç: ' + institute + '*\n*–ì—Ä—É–ø–ø–∞: ' + group + '*\n–ö—É—Ä—Å: ' + course + '*', parse_mode='Markdown')
            bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª', reply_markup=markup, parse_mode='Markdown')
        if (course == "1" or course == "2" ) and (group == "–ü–ò"):
            print(1)
            ws.Range("Q2:R42").CopyPicture(Format = 2)
            img = ImageGrab.grabclipboard()
            img.save(r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\scrffstr.jpg", "jpeg")
            wb.Close()
            client.Quit()
            markup = types.ForceReply(selective=False)
            markup = types.InlineKeyboardMarkup(row_width=2)
            btn1 = types.InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", callback_data ='back_to_inst')
            btn2 = types.InlineKeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data ='raspis13st')
            btn3 = types.InlineKeyboardButton(text="–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–µ–º–∞ –∑–∞–¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π", callback_data ='back_to_inst')
            btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection1')
            markup.add(btn1, btn2, btn3, btn6)
            bot.send_message(call.message.chat.id, f'–ò —Ç–∞–∫, –≤—ã: {institute} \n–ì—Ä—É–ø–ø–∞: {group} \n–ö—É—Ä—Å: {course}', parse_mode='Markdown')
            # bot.send_message(call.message.chat.id,'*–ò–Ω—Å—Ç–∏—Ç—É—Ç: ' + institute + '*\n*–ì—Ä—É–ø–ø–∞: ' + group + '*\n–ö—É—Ä—Å: ' + course + '*', parse_mode='Markdown')
            bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª', reply_markup=markup, parse_mode='Markdown')
        if (course == "3" ) and (group == "–ü–†–ò"):
            print(1)
            wb.Close()
            client.Quit()
            markup = types.ForceReply(selective=False)
            markup = types.InlineKeyboardMarkup(row_width=2)
            btn1 = types.InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", callback_data ='back_to_inst')
            btn2 = types.InlineKeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data ='prepod')
            btn3 = types.InlineKeyboardButton(text="–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–µ–º–∞ –∑–∞–¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π", callback_data ='back_to_inst')
            btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection1')
            markup.add(btn1, btn2, btn3, btn6)
            bot.send_message(call.message.chat.id, f'–ò —Ç–∞–∫, –≤—ã: {institute} \n–ì—Ä—É–ø–ø–∞: {group} \n–ö—É—Ä—Å: {course}', parse_mode='Markdown')
            # bot.send_message(call.message.chat.id,'*–ò–Ω—Å—Ç–∏—Ç—É—Ç: ' + institute + '*\n*–ì—Ä—É–ø–ø–∞: ' + group + '*\n–ö—É—Ä—Å: ' + course + '*', parse_mode='Markdown')
            bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª', reply_markup=markup, parse_mode='Markdown')
        if (course == "1" or course == "2" or course == "3" ) and (group == "–ì–ú–£"):
            print(1)
            ws.Range("S2:U44").CopyPicture(Format = 2)
            img = ImageGrab.grabclipboard()
            img.save(r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\scrffstr.jpg", "jpeg")
            wb.Close()
            client.Quit()
            markup = types.ForceReply(selective=False)
            markup = types.InlineKeyboardMarkup(row_width=2)
            btn1 = types.InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", callback_data ='back_to_inst')
            btn2 = types.InlineKeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data ='raspis13st')
            btn3 = types.InlineKeyboardButton(text="–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–µ–º–∞ –∑–∞–¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π", callback_data ='back_to_inst')
            btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection1')
            markup.add(btn1, btn2, btn3, btn6)
            bot.send_message(call.message.chat.id, f'–ò —Ç–∞–∫, –≤—ã: {institute} \n–ì—Ä—É–ø–ø–∞: {group} \n–ö—É—Ä—Å: {course}', parse_mode='Markdown')
            # bot.send_message(call.message.chat.id,'*–ò–Ω—Å—Ç–∏—Ç—É—Ç: ' + institute + '*\n*–ì—Ä—É–ø–ø–∞: ' + group + '*\n–ö—É—Ä—Å: ' + course + '*', parse_mode='Markdown')
            bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª', reply_markup=markup, parse_mode='Markdown')

##################################################–õ–ï–°–ù–ò–ö–ò##############################################################

@bot.callback_query_handler(func=lambda call: call.data in ['mm_group', 'mlp_group', 'td_group', 'tb_group', 'ersp_group', 'lx_group', 'la_group', 'sad_group'])
def process_group_selection3(call):
    rus_gr = {
        'mm_group': '–ú–ú',
        'mlp_group': '–ú–õ–ü',
        'td_group': '–¢–î',
        'tb_group': '–¢–ë',
        'ersp_group': '–≠–†–°–ü',
        'lx_group': '–õ–•',
        'la_group': '–õ–ê',
        'sad_group': '–°–ê–î'
    }
    user_id = call.from_user.id
    user_states[user_id].group = rus_gr[call.data]
    markup = types.ForceReply(selective=False)
    markup = types.InlineKeyboardMarkup(row_width=5)
    btn1 = types.InlineKeyboardButton(text="1 –∫—É—Ä—Å", callback_data ='first_group1')
    btn2 = types.InlineKeyboardButton(text="2 –∫—É—Ä—Å", callback_data ='sec_group1')
    btn3 = types.InlineKeyboardButton(text="3 –∫—É—Ä—Å", callback_data ='thr_group1')
    btn4 = types.InlineKeyboardButton(text="4 –∫—É—Ä—Å", callback_data ='four_group1')
    btn5 = types.InlineKeyboardButton(text="–ú–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞", callback_data ='magiss_group1')
    btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='group_menu1')
    markup.add(btn1, btn2, btn3, btn4, btn5, btn6)
    bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –∫—É—Ä—Å', reply_markup=markup, parse_mode='Markdown')

@bot.callback_query_handler(func=lambda call: call.data in ['first_group1', 'sec_group1', 'thr_group1', 'four_group1', 'magiss_group1'])
def process_group_selection4(call):
    chat_states[call.message.chat.id] = 'group_selection'
    rus_cr = {
        'first_group1': '1',
        'sec_group1': '2',
        'thr_group1': '3',
        'four_group1': '4',
        'magiss_group1': '–ú–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞'
    }
    user_id = call.from_user.id
    user_states[user_id].course = rus_cr[call.data]
    institute = user_states[user_id].institute
    group = user_states[user_id].group
    course = user_states[user_id].course
    if (course == "4") and ((group == "–õ–•") or (group == "–õ–ê") or (group == "–ú–õ–ü") or (group == "–ê–î")):
        block = 1
        if block == 1:
            markup = types.ForceReply(selective=False)
            markup = types.InlineKeyboardMarkup(row_width=2)
            btn1 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='back_to_inst')
            markup.add(btn1)
            bot.send_message(call.message.chat.id,'–í–∞—à —Ä–∞—Å–¥–µ–ª —Å–µ–π—á–∞—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω', reply_markup=markup, parse_mode='Markdown')
        else:
            file_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps\raspisonstr.xls"
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
            if os.path.exists(file_path):
                # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º –µ–≥–æ
                os.remove(file_path)

            base_url = "https://bgitu.ru/studentu/raspisanie/ochnoe-obuchenie/2024/rv-2/"
            url = "https://bgitu.ru/studentu/raspisanie/ochnoe-obuchenie/2024/rv-2/"  # –≤—Ç–æ—Ä–æ–π —Ä–∞–∑ —É–∫–∞–∑—ã–≤–∞–µ–º url, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Å—ã–ª–∫–∏
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º GET-–∑–∞–ø—Ä–æ—Å –∏ –ø–æ–ª—É—á–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            response = requests.get(url)
            html_content = response.content
            # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç BeautifulSoup –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ HTML
            soup = BeautifulSoup(html_content, "html.parser")
            # –ù–∞—Ö–æ–¥–∏–º —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –≤ —Ç–µ–≥–µ <a> —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
            link_tag = soup.find("a", string="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ 2 —Å–µ–º–µ—Å—Ç—Ä –ü–ì–° –ì–°–• –ü–°–ö –ê–î –¢–ì–°–í 4 –∫—É—Ä—Å.xls")
            # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω —Ç–µ–≥ <a>, –ø–æ–ª—É—á–∞–µ–º –µ–≥–æ URL –∏ –æ–±—ä–µ–¥–∏–Ω—è–µ–º —Å –±–∞–∑–æ–≤—ã–º URL
            if link_tag:
                link_href = link_tag.get("href")
                full_url = urljoin(base_url, link_href)
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª
                save_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps"
                # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
                os.makedirs(save_path, exist_ok=True)
                # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª –ø–æ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–π —Å—Å—ã–ª–∫–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —É–∫–∞–∑–∞–Ω–Ω—É—é –ø–∞–ø–∫—É
                file_path, headers = urlretrieve(full_url, os.path.join(save_path, "raspisonstr.xls"))
            else:
                bot.send_message(call.message.chat.id, '–í—Å–µ –ø–ª–æ—Ö–æ')
            save_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps"
            # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            file_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps\raspisonstr.xlsx"
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
            if os.path.exists(file_path):
                # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º –µ–≥–æ
                os.remove(file_path)
            # –ü—É—Ç—å –∫ —Å–∫—Ä–∏–Ω—à–æ—Ç—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            screenshot_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\raspison_rangestr.png"
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç
            if os.path.exists(screenshot_path):
            # –ï—Å–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º –µ–≥–æ
                os.remove(screenshot_path)
            time.sleep(1)
            # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º .xls —Ñ–∞–π–ª –≤ .xlsx
            excel = win32.gencache.EnsureDispatch('Excel.Application')
            wb = excel.Workbooks.Open(os.path.join(save_path, "raspisonstr.xls"))
            wb.SaveAs(os.path.join(save_path, "raspisonstr.xlsx"), FileFormat=51)
            wb.Close()
            excel.Quit()
            time.sleep(0.5)
            xlsx_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps\raspisonstr.xlsx"
            client = win32.Dispatch("Excel.Application")
            wb = client.Workbooks.Open(xlsx_path)
            ws = wb.ActiveSheet
            print(1)
            ws.Range("A2:I49").CopyPicture(Format = 2)
            img = ImageGrab.grabclipboard()
            img.save(r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\scrffstr.jpg", "jpeg")
            wb.Close()
            client.Quit()
            markup = types.ForceReply(selective=False)
            markup = types.InlineKeyboardMarkup(row_width=5)
            btn1 = types.InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", callback_data ='back_to_inst')
            btn2 = types.InlineKeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data ='raspis13st')
            btn3 = types.InlineKeyboardButton(text="–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–µ–º–∞ –∑–∞–¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π", callback_data ='back_to_inst')
            btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection1')
            markup.add(btn1, btn2, btn3, btn6)
            bot.send_message(call.message.chat.id, f'–ò —Ç–∞–∫, –≤—ã: {institute} \n–ì—Ä—É–ø–ø–∞: {group} \n–ö—É—Ä—Å: {course}', parse_mode='Markdown')
            # bot.send_message(call.message.chat.id,'*–ò–Ω—Å—Ç–∏—Ç—É—Ç: ' + institute + '*\n*–ì—Ä—É–ø–ø–∞: ' + group + '*\n–ö—É—Ä—Å: ' + course + '*', parse_mode='Markdown')
            bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª', reply_markup=markup, parse_mode='Markdown')
    else:
        

        if group == "–õ–•" or group == "–õ–ê" or group == "–°–ê–î":
            file_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps\raspisonstr.xls"
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
            if os.path.exists(file_path):
                # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º –µ–≥–æ
                os.remove(file_path)

            base_url = "https://bgitu.ru/studentu/raspisanie/ochnoe-obuchenie/2024/rv-2/"
            url = "https://bgitu.ru/studentu/raspisanie/ochnoe-obuchenie/2024/rv-2/"  # –≤—Ç–æ—Ä–æ–π —Ä–∞–∑ —É–∫–∞–∑—ã–≤–∞–µ–º url, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Å—ã–ª–∫–∏
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º GET-–∑–∞–ø—Ä–æ—Å –∏ –ø–æ–ª—É—á–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            response = requests.get(url)
            html_content = response.content
            # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç BeautifulSoup –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ HTML
            soup = BeautifulSoup(html_content, "html.parser")
            # –ù–∞—Ö–æ–¥–∏–º —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –≤ —Ç–µ–≥–µ <a> —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
            link_tag = soup.find("a", string="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ 2 —Å–µ–º–µ—Å—Ç—Ä –õ–• –õ–ê –°–ê–î 1-3 –∫—É—Ä—Å—ã.xls")
            # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω —Ç–µ–≥ <a>, –ø–æ–ª—É—á–∞–µ–º –µ–≥–æ URL –∏ –æ–±—ä–µ–¥–∏–Ω—è–µ–º —Å –±–∞–∑–æ–≤—ã–º URL
            if link_tag:
                link_href = link_tag.get("href")
                full_url = urljoin(base_url, link_href)
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª
                save_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps"
                # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
                os.makedirs(save_path, exist_ok=True)
                # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª –ø–æ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–π —Å—Å—ã–ª–∫–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —É–∫–∞–∑–∞–Ω–Ω—É—é –ø–∞–ø–∫—É
                file_path, headers = urlretrieve(full_url, os.path.join(save_path, "raspisonstr.xls"))
            else:
                bot.send_message(call.message.chat.id, '–í—Å–µ –ø–ª–æ—Ö–æ')
            save_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps"
            # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            file_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps\raspisonstr.xlsx"
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
            if os.path.exists(file_path):
                # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º –µ–≥–æ
                os.remove(file_path)
            # –ü—É—Ç—å –∫ —Å–∫—Ä–∏–Ω—à–æ—Ç—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            screenshot_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\raspison_rangestr.png"
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç
            if os.path.exists(screenshot_path):
            # –ï—Å–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º –µ–≥–æ
                os.remove(screenshot_path)
            time.sleep(1)
            # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º .xls —Ñ–∞–π–ª –≤ .xlsx
            excel = win32.gencache.EnsureDispatch('Excel.Application')
            wb = excel.Workbooks.Open(os.path.join(save_path, "raspisonstr.xls"))
            wb.SaveAs(os.path.join(save_path, "raspisonstr.xlsx"), FileFormat=51)
            wb.Close()
            excel.Quit()
            time.sleep(0.5)
            xlsx_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps\raspisonstr.xlsx"
            client = win32.Dispatch("Excel.Application")
            wb = client.Workbooks.Open(xlsx_path)
            ws = wb.ActiveSheet

            if (course == "1") and (group == "–õ–•" or group == "–°–ê–î" or group == "–õ–ê"):
                print(1)
                ws.Range("A2:F43").CopyPicture(Format = 2)
                img = ImageGrab.grabclipboard()
                img.save(r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\scrffstr.jpg", "jpeg")
                wb.Close()
                client.Quit()
                markup = types.ForceReply(selective=False)
                markup = types.InlineKeyboardMarkup(row_width=2)
                btn1 = types.InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", callback_data ='back_to_inst')
                btn2 = types.InlineKeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data ='raspis13st')
                btn3 = types.InlineKeyboardButton(text="–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–µ–º–∞ –∑–∞–¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π", callback_data ='back_to_inst')
                btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection1')
                markup.add(btn1, btn2, btn3, btn6)
                bot.send_message(call.message.chat.id, f'–ò —Ç–∞–∫, –≤—ã: {institute} \n–ì—Ä—É–ø–ø–∞: {group} \n–ö—É—Ä—Å: {course}', parse_mode='Markdown')
                # bot.send_message(call.message.chat.id,'*–ò–Ω—Å—Ç–∏—Ç—É—Ç: ' + institute + '*\n*–ì—Ä—É–ø–ø–∞: ' + group + '*\n–ö—É—Ä—Å: ' + course + '*', parse_mode='Markdown')
                bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª', reply_markup=markup, parse_mode='Markdown')
            if (course == "2") and (group == "–õ–•" or group == "–°–ê–î" or group == "–õ–ê"):
                print(2)
                ws.Range("G2:I43").CopyPicture(Format = 2)
                img = ImageGrab.grabclipboard()
                img.save(r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\scrffstr.jpg", "jpeg")
                wb.Close()
                client.Quit()
                markup = types.ForceReply(selective=False)
                markup = types.InlineKeyboardMarkup(row_width=2)
                btn1 = types.InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", callback_data ='back_to_inst')
                btn2 = types.InlineKeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data ='raspis13st')
                btn3 = types.InlineKeyboardButton(text="–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–µ–º–∞ –∑–∞–¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π", callback_data ='back_to_inst')
                btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection1')
                markup.add(btn1, btn2, btn3, btn6)
                bot.send_message(call.message.chat.id, f'–ò —Ç–∞–∫, –≤—ã: {institute} \n–ì—Ä—É–ø–ø–∞: {group} \n–ö—É—Ä—Å: {course}', parse_mode='Markdown')
                # bot.send_message(call.message.chat.id,'*–ò–Ω—Å—Ç–∏—Ç—É—Ç: ' + institute + '*\n*–ì—Ä—É–ø–ø–∞: ' + group + '*\n–ö—É—Ä—Å: ' + course + '*', parse_mode='Markdown')
                bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª', reply_markup=markup, parse_mode='Markdown')
            if (course == "3") and (group == "–õ–•" or group == "–°–ê–î" or group == "–õ–ê"):
                print(3)
                ws.Range("J2:M43").CopyPicture(Format = 2)
                img = ImageGrab.grabclipboard()
                img.save(r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\scrffstr.jpg", "jpeg")
                wb.Close()
                client.Quit()
                markup = types.ForceReply(selective=False)
                markup = types.InlineKeyboardMarkup(row_width=2)
                btn1 = types.InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", callback_data ='back_to_inst')
                btn2 = types.InlineKeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data ='raspis13st')
                btn3 = types.InlineKeyboardButton(text="–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–µ–º–∞ –∑–∞–¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π", callback_data ='back_to_inst')
                btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection1')
                markup.add(btn1, btn2, btn3, btn6)
                bot.send_message(call.message.chat.id, f'–ò —Ç–∞–∫, –≤—ã: {institute} \n–ì—Ä—É–ø–ø–∞: {group} \n–ö—É—Ä—Å: {course}', parse_mode='Markdown')
                # bot.send_message(call.message.chat.id,'*–ò–Ω—Å—Ç–∏—Ç—É—Ç: ' + institute + '*\n*–ì—Ä—É–ø–ø–∞: ' + group + '*\n–ö—É—Ä—Å: ' + course + '*', parse_mode='Markdown')
                bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª', reply_markup=markup, parse_mode='Markdown')
            if (course == "4") and (group == "–°–ê–î"):
                block = 1
                if block == 1:
                    wb.Close()
                    client.Quit()
                    markup = types.ForceReply(selective=False)
                    markup = types.InlineKeyboardMarkup(row_width=2)
                    btn1 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='back_to_inst')
                    markup.add(btn1)
                    bot.send_message(call.message.chat.id,'–í–∞—à —Ä–∞—Å–¥–µ–ª —Å–µ–π—á–∞—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω', reply_markup=markup, parse_mode='Markdown')

        else:
            file_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps\raspisonstr.xls"
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
            if os.path.exists(file_path):
                # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º –µ–≥–æ
                os.remove(file_path)

            base_url = "https://bgitu.ru/studentu/raspisanie/ochnoe-obuchenie/2024/rv-2/"
            url = "https://bgitu.ru/studentu/raspisanie/ochnoe-obuchenie/2024/rv-2/"  # –≤—Ç–æ—Ä–æ–π —Ä–∞–∑ —É–∫–∞–∑—ã–≤–∞–µ–º url, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Å—ã–ª–∫–∏
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º GET-–∑–∞–ø—Ä–æ—Å –∏ –ø–æ–ª—É—á–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            response = requests.get(url)
            html_content = response.content
            # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç BeautifulSoup –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ HTML
            soup = BeautifulSoup(html_content, "html.parser")
            # –ù–∞—Ö–æ–¥–∏–º —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –≤ —Ç–µ–≥–µ <a> —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
            link_tag = soup.find("a", string="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ 2 —Å–µ–º–µ—Å—Ç—Ä –ú–ú –ú–õ–ü –¢–î –¢–ë –≠–†–°–ü 1-3 –∫—É—Ä—Å—ã.xls")
            # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω —Ç–µ–≥ <a>, –ø–æ–ª—É—á–∞–µ–º –µ–≥–æ URL –∏ –æ–±—ä–µ–¥–∏–Ω—è–µ–º —Å –±–∞–∑–æ–≤—ã–º URL
            if link_tag:
                link_href = link_tag.get("href")
                full_url = urljoin(base_url, link_href)
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª
                save_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps"
                # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
                os.makedirs(save_path, exist_ok=True)
                # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª –ø–æ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–π —Å—Å—ã–ª–∫–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —É–∫–∞–∑–∞–Ω–Ω—É—é –ø–∞–ø–∫—É
                file_path, headers = urlretrieve(full_url, os.path.join(save_path, "raspisonstr.xls"))
            else:
                bot.send_message(call.message.chat.id, '–í—Å–µ –ø–ª–æ—Ö–æ')
            save_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps"
            # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            file_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps\raspisonstr.xlsx"
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
            if os.path.exists(file_path):
                # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º –µ–≥–æ
                os.remove(file_path)
            # –ü—É—Ç—å –∫ —Å–∫—Ä–∏–Ω—à–æ—Ç—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            screenshot_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\raspison_rangestr.png"
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç
            if os.path.exists(screenshot_path):
            # –ï—Å–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º –µ–≥–æ
                os.remove(screenshot_path)
            time.sleep(1)
            # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º .xls —Ñ–∞–π–ª –≤ .xlsx
            excel = win32.gencache.EnsureDispatch('Excel.Application')
            wb = excel.Workbooks.Open(os.path.join(save_path, "raspisonstr.xls"))
            wb.SaveAs(os.path.join(save_path, "raspisonstr.xlsx"), FileFormat=51)
            wb.Close()
            excel.Quit()
            time.sleep(0.5)
            xlsx_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps\raspisonstr.xlsx"
            client = win32.Dispatch("Excel.Application")
            wb = client.Workbooks.Open(xlsx_path)
            ws = wb.ActiveSheet

            if ((course == "2" and group == "–ú–ú") or (group == "–¢–ë" and (course =="1" or course == "2"))):
                ws.Range("A2:F45").CopyPicture(Format = 2)
                img = ImageGrab.grabclipboard()
                img.save(r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\scrffstr.jpg", "jpeg")
                wb.Close()
                client.Quit()
                markup = types.ForceReply(selective=False)
                markup = types.InlineKeyboardMarkup(row_width=2)
                btn1 = types.InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", callback_data ='back_to_inst')
                btn2 = types.InlineKeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data ='raspis13st')
                btn3 = types.InlineKeyboardButton(text="–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–µ–º–∞ –∑–∞–¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π", callback_data ='back_to_inst')
                btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection1')
                markup.add(btn1, btn2, btn3, btn6)
                bot.send_message(call.message.chat.id, f'–ò —Ç–∞–∫, –≤—ã: {institute} \n–ì—Ä—É–ø–ø–∞: {group} \n–ö—É—Ä—Å: {course}', parse_mode='Markdown')
                # bot.send_message(call.message.chat.id,'*–ò–Ω—Å—Ç–∏—Ç—É—Ç: ' + institute + '*\n*–ì—Ä—É–ø–ø–∞: ' + group + '*\n–ö—É—Ä—Å: ' + course + '*', parse_mode='Markdown')
                bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª', reply_markup=markup, parse_mode='Markdown')
            if (course == "2" or course == "1" or course == "3") and group == "–ú–õ–ü":
                ws.Range("G2:I45").CopyPicture(Format = 2)
                img = ImageGrab.grabclipboard()
                img.save(r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\scrffstr.jpg", "jpeg")
                wb.Close()
                client.Quit()
                markup = types.ForceReply(selective=False)
                markup = types.InlineKeyboardMarkup(row_width=2)
                btn1 = types.InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", callback_data ='back_to_inst')
                btn2 = types.InlineKeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data ='raspis13st')
                btn3 = types.InlineKeyboardButton(text="–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–µ–º–∞ –∑–∞–¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π", callback_data ='back_to_inst')
                btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection1')
                markup.add(btn1, btn2, btn3, btn6)
                bot.send_message(call.message.chat.id, f'–ò —Ç–∞–∫, –≤—ã: {institute} \n–ì—Ä—É–ø–ø–∞: {group} \n–ö—É—Ä—Å: {course}', parse_mode='Markdown')
                # bot.send_message(call.message.chat.id,'*–ò–Ω—Å—Ç–∏—Ç—É—Ç: ' + institute + '*\n*–ì—Ä—É–ø–ø–∞: ' + group + '*\n–ö—É—Ä—Å: ' + course + '*', parse_mode='Markdown')
                bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª', reply_markup=markup, parse_mode='Markdown')
            if (course == "2" or course == "1" or course == "3") and group == "–¢–î":
                ws.Range("J2:L45").CopyPicture(Format = 2)
                img = ImageGrab.grabclipboard()
                img.save(r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\scrffstr.jpg", "jpeg")
                wb.Close()
                client.Quit()
                markup = types.ForceReply(selective=False)
                markup = types.InlineKeyboardMarkup(row_width=2)
                btn1 = types.InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", callback_data ='back_to_inst')
                btn2 = types.InlineKeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data ='raspis13st')
                btn3 = types.InlineKeyboardButton(text="–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–µ–º–∞ –∑–∞–¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π", callback_data ='back_to_inst')
                btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection1')
                markup.add(btn1, btn2, btn3, btn6)
                bot.send_message(call.message.chat.id, f'–ò —Ç–∞–∫, –≤—ã: {institute} \n–ì—Ä—É–ø–ø–∞: {group} \n–ö—É—Ä—Å: {course}', parse_mode='Markdown')
                # bot.send_message(call.message.chat.id,'*–ò–Ω—Å—Ç–∏—Ç—É—Ç: ' + institute + '*\n*–ì—Ä—É–ø–ø–∞: ' + group + '*\n–ö—É—Ä—Å: ' + course + '*', parse_mode='Markdown')
                bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª', reply_markup=markup, parse_mode='Markdown')
            if group == "–≠–†–°–ü":
                print(1)
                ws.Range("M2:M45").CopyPicture(Format = 2)
                img = ImageGrab.grabclipboard()
                img.save(r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\scrffstr.jpg", "jpeg")
                wb.Close()
                client.Quit()
                markup = types.ForceReply(selective=False)
                markup = types.InlineKeyboardMarkup(row_width=2)
                btn1 = types.InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", callback_data ='back_to_inst')
                btn2 = types.InlineKeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data ='raspis13st')
                btn3 = types.InlineKeyboardButton(text="–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–µ–º–∞ –∑–∞–¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π", callback_data ='back_to_inst')
                btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection1')
                markup.add(btn1, btn2, btn3, btn6)
                bot.send_message(call.message.chat.id, f'–ò —Ç–∞–∫, –≤—ã: {institute} \n–ì—Ä—É–ø–ø–∞: {group} \n–ö—É—Ä—Å: {course}', parse_mode='Markdown')
                # bot.send_message(call.message.chat.id,'*–ò–Ω—Å—Ç–∏—Ç—É—Ç: ' + institute + '*\n*–ì—Ä—É–ø–ø–∞: ' + group + '*\n–ö—É—Ä—Å: ' + course + '*', parse_mode='Markdown')
                bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª', reply_markup=markup, parse_mode='Markdown')
            if (course == "1" or course == "2" or course == "3" ) and (group == "–¢–ì–°–í"):
                ws.Range("N2:P43").CopyPicture(Format = 2)
                img = ImageGrab.grabclipboard()
                img.save(r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\scrffstr.jpg", "jpeg")
                wb.Close()
                client.Quit()
                markup = types.ForceReply(selective=False)
                markup = types.InlineKeyboardMarkup(row_width=2)
                btn1 = types.InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", callback_data ='back_to_inst')
                btn2 = types.InlineKeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data ='raspis13st')
                btn3 = types.InlineKeyboardButton(text="–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–µ–º–∞ –∑–∞–¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π", callback_data ='back_to_inst')
                btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection1')
                markup.add(btn1, btn2, btn3, btn6)
                bot.send_message(call.message.chat.id, f'–ò —Ç–∞–∫, –≤—ã: {institute} \n–ì—Ä—É–ø–ø–∞: {group} \n–ö—É—Ä—Å: {course}', parse_mode='Markdown')
                # bot.send_message(call.message.chat.id,'*–ò–Ω—Å—Ç–∏—Ç—É—Ç: ' + institute + '*\n*–ì—Ä—É–ø–ø–∞: ' + group + '*\n–ö—É—Ä—Å: ' + course + '*', parse_mode='Markdown')
                bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª', reply_markup=markup, parse_mode='Markdown')
            if (course == "1" or course == "2" ) and (group == "–ü–°–ö"):
                ws.Range("Q2:R42").CopyPicture(Format = 2)
                img = ImageGrab.grabclipboard()
                img.save(r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\scrffstr.jpg", "jpeg")
                wb.Close()
                client.Quit()
                markup = types.ForceReply(selective=False)
                markup = types.InlineKeyboardMarkup(row_width=2)
                btn1 = types.InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", callback_data ='back_to_inst')
                btn2 = types.InlineKeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data ='raspis13st')
                btn3 = types.InlineKeyboardButton(text="–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–µ–º–∞ –∑–∞–¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π", callback_data ='back_to_inst')
                btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection1')
                markup.add(btn1, btn2, btn3, btn6)
                bot.send_message(call.message.chat.id, f'–ò —Ç–∞–∫, –≤—ã: {institute} \n–ì—Ä—É–ø–ø–∞: {group} \n–ö—É—Ä—Å: {course}', parse_mode='Markdown')
                # bot.send_message(call.message.chat.id,'*–ò–Ω—Å—Ç–∏—Ç—É—Ç: ' + institute + '*\n*–ì—Ä—É–ø–ø–∞: ' + group + '*\n–ö—É—Ä—Å: ' + course + '*', parse_mode='Markdown')
                bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª', reply_markup=markup, parse_mode='Markdown')
            if (course == "3" ) and (group == "–ü–°–ö"):
                wb.Close()
                client.Quit()
                markup = types.ForceReply(selective=False)
                markup = types.InlineKeyboardMarkup(row_width=2)
                btn1 = types.InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", callback_data ='back_to_inst')
                btn2 = types.InlineKeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data ='prepod')
                btn3 = types.InlineKeyboardButton(text="–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–µ–º–∞ –∑–∞–¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π", callback_data ='back_to_inst')
                btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection1')
                markup.add(btn1, btn2, btn3, btn6)
                bot.send_message(call.message.chat.id, f'–ò —Ç–∞–∫, –≤—ã: {institute} \n–ì—Ä—É–ø–ø–∞: {group} \n–ö—É—Ä—Å: {course}', parse_mode='Markdown')
                # bot.send_message(call.message.chat.id,'*–ò–Ω—Å—Ç–∏—Ç—É—Ç: ' + institute + '*\n*–ì—Ä—É–ø–ø–∞: ' + group + '*\n–ö—É—Ä—Å: ' + course + '*', parse_mode='Markdown')
                bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª', reply_markup=markup, parse_mode='Markdown')
            if (course == "1" or course == "2" or course == "3" ) and (group == "–ê–î"):
                ws.Range("S2:U44").CopyPicture(Format = 2)
                img = ImageGrab.grabclipboard()
                img.save(r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\scrffstr.jpg", "jpeg")
                wb.Close()
                client.Quit()
                markup = types.ForceReply(selective=False)
                markup = types.InlineKeyboardMarkup(row_width=2)
                btn1 = types.InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", callback_data ='back_to_inst')
                btn2 = types.InlineKeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data ='raspis13st')
                btn3 = types.InlineKeyboardButton(text="–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–µ–º–∞ –∑–∞–¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π", callback_data ='back_to_inst')
                btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection1')
                markup.add(btn1, btn2, btn3, btn6)
                bot.send_message(call.message.chat.id, f'–ò —Ç–∞–∫, –≤—ã: {institute} \n–ì—Ä—É–ø–ø–∞: {group} \n–ö—É—Ä—Å: {course}', parse_mode='Markdown')
                # bot.send_message(call.message.chat.id,'*–ò–Ω—Å—Ç–∏—Ç—É—Ç: ' + institute + '*\n*–ì—Ä—É–ø–ø–∞: ' + group + '*\n–ö—É—Ä—Å: ' + course + '*', parse_mode='Markdown')
                bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª', reply_markup=markup, parse_mode='Markdown')

###################################–°–¢–†–û–ò–¢–ï–õ–ò##############################################################################
@bot.callback_query_handler(func=lambda call: call.data in ['pgs_group', 'gsx_group', 'tgsv_group', 'psk_group', 'ad_group'])
def process_group_selection1(call):
    rus_gr = {
        'pgs_group': '–ü–ì–°',
        'gsx_group': '–ì–°–•',
        'tgsv_group': '–¢–ì–°–í',
        'psk_group': '–ü–°–ö',
        'ad_group': '–ê–î'
    }
    user_id = call.from_user.id
    user_states[user_id].group = rus_gr[call.data]
    markup = types.ForceReply(selective=False)
    markup = types.InlineKeyboardMarkup(row_width=5)
    btn1 = types.InlineKeyboardButton(text="1 –∫—É—Ä—Å", callback_data ='first_group')
    btn2 = types.InlineKeyboardButton(text="2 –∫—É—Ä—Å", callback_data ='sec_group')
    btn3 = types.InlineKeyboardButton(text="3 –∫—É—Ä—Å", callback_data ='thr_group')
    btn4 = types.InlineKeyboardButton(text="4 –∫—É—Ä—Å", callback_data ='four_group')
    btn5 = types.InlineKeyboardButton(text="–ú–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞", callback_data ='magiss_group')
    btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='group_menu')
    markup.add(btn1, btn2, btn3, btn4, btn5, btn6)
    bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –∫—É—Ä—Å', reply_markup=markup, parse_mode='Markdown')

@bot.callback_query_handler(func=lambda call: call.data in ['first_group', 'sec_group', 'thr_group', 'four_group', 'magiss_group'])
def process_group_selection2(call):
    chat_states[call.message.chat.id] = 'group_selection'
    rus_cr = {
        'first_group': '1',
        'sec_group': '2',
        'thr_group': '3',
        'four_group': '4',
        'magiss_group': '–ú–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞'
    }
    user_id = call.from_user.id
    user_states[user_id].course = rus_cr[call.data]
    institute = user_states[user_id].institute
    group = user_states[user_id].group
    course = user_states[user_id].course
    if (course == "4") and (group == "–ü–ì–°" or group == "–ì–°–•" or group == "–¢–ì–°–í" or group == "–ê–î"):
        file_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps\raspisonstr.xls"
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
        if os.path.exists(file_path):
            # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º –µ–≥–æ
            os.remove(file_path)
        base_url = "https://bgitu.ru/studentu/raspisanie/ochnoe-obuchenie/2024/rv-2/"
        url = "https://bgitu.ru/studentu/raspisanie/ochnoe-obuchenie/2024/rv-2/"  # –≤—Ç–æ—Ä–æ–π —Ä–∞–∑ —É–∫–∞–∑—ã–≤–∞–µ–º url, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Å—ã–ª–∫–∏
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º GET-–∑–∞–ø—Ä–æ—Å –∏ –ø–æ–ª—É—á–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        response = requests.get(url)
        html_content = response.content
        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç BeautifulSoup –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ HTML
        soup = BeautifulSoup(html_content, "html.parser")
        # –ù–∞—Ö–æ–¥–∏–º —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –≤ —Ç–µ–≥–µ <a> —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
        link_tag = soup.find("a", string="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ 2 —Å–µ–º–µ—Å—Ç—Ä –ü–ì–° –ì–°–• –ü–°–ö –ê–î –¢–ì–°–í 4 –∫—É—Ä—Å.xls")
        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω —Ç–µ–≥ <a>, –ø–æ–ª—É—á–∞–µ–º –µ–≥–æ URL –∏ –æ–±—ä–µ–¥–∏–Ω—è–µ–º —Å –±–∞–∑–æ–≤—ã–º URL
        if link_tag:
            link_href = link_tag.get("href")
            full_url = urljoin(base_url, link_href)
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª
            save_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps"
            # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
            os.makedirs(save_path, exist_ok=True)
            # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª –ø–æ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–π —Å—Å—ã–ª–∫–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —É–∫–∞–∑–∞–Ω–Ω—É—é –ø–∞–ø–∫—É
            file_path, headers = urlretrieve(full_url, os.path.join(save_path, "raspisonstr.xls"))
        else:
            bot.send_message(call.message.chat.id, '–í—Å–µ –ø–ª–æ—Ö–æ')
        save_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps"
        # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        file_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps\raspisonstr.xlsx"
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
        if os.path.exists(file_path):
            # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º –µ–≥–æ
            os.remove(file_path)
        # –ü—É—Ç—å –∫ —Å–∫—Ä–∏–Ω—à–æ—Ç—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        screenshot_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\raspison_rangestr.png"
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç
        if os.path.exists(screenshot_path):
        # –ï—Å–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º –µ–≥–æ
            os.remove(screenshot_path)
        time.sleep(1)
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º .xls —Ñ–∞–π–ª –≤ .xlsx
        excel = win32.gencache.EnsureDispatch('Excel.Application')
        wb = excel.Workbooks.Open(os.path.join(save_path, "raspisonstr.xls"))
        wb.SaveAs(os.path.join(save_path, "raspisonstr.xlsx"), FileFormat=51)
        wb.Close()
        excel.Quit()
        time.sleep(0.5)
        xlsx_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps\raspisonstr.xlsx"
        client = win32.Dispatch("Excel.Application")
        wb = client.Workbooks.Open(xlsx_path)
        ws = wb.ActiveSheet
        print(1)
        ws.Range("A2:I49").CopyPicture(Format = 2)
        img = ImageGrab.grabclipboard()
        img.save(r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\scrffstr.jpg", "jpeg")
        wb.Close()
        client.Quit()
        markup = types.ForceReply(selective=False)
        markup = types.InlineKeyboardMarkup(row_width=5)
        btn1 = types.InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", callback_data ='back_to_inst')
        btn2 = types.InlineKeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data ='raspis13st')
        btn3 = types.InlineKeyboardButton(text="–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–µ–º–∞ –∑–∞–¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π", callback_data ='back_to_inst')
        btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection1')
        markup.add(btn1, btn2, btn3, btn6)
        bot.send_message(call.message.chat.id, f'–ò —Ç–∞–∫, –≤—ã: {institute} \n–ì—Ä—É–ø–ø–∞: {group} \n–ö—É—Ä—Å: {course}', parse_mode='Markdown')
        # bot.send_message(call.message.chat.id,'*–ò–Ω—Å—Ç–∏—Ç—É—Ç: ' + institute + '*\n*–ì—Ä—É–ø–ø–∞: ' + group + '*\n–ö—É—Ä—Å: ' + course + '*', parse_mode='Markdown')
        bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª', reply_markup=markup, parse_mode='Markdown')
    else:
        file_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps\raspisonstr.xls"
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
        if os.path.exists(file_path):
            # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º –µ–≥–æ
            os.remove(file_path)

        base_url = "https://bgitu.ru/studentu/raspisanie/ochnoe-obuchenie/2024/rv-2/"
        url = "https://bgitu.ru/studentu/raspisanie/ochnoe-obuchenie/2024/rv-2/"  # –≤—Ç–æ—Ä–æ–π —Ä–∞–∑ —É–∫–∞–∑—ã–≤–∞–µ–º url, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Å—ã–ª–∫–∏
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º GET-–∑–∞–ø—Ä–æ—Å –∏ –ø–æ–ª—É—á–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        response = requests.get(url)
        html_content = response.content
        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç BeautifulSoup –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ HTML
        soup = BeautifulSoup(html_content, "html.parser")
        # –ù–∞—Ö–æ–¥–∏–º —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –≤ —Ç–µ–≥–µ <a> —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
        link_tag = soup.find("a", string="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ 2 —Å–µ–º–µ—Å—Ç—Ä –ü–ì–° –ì–°–• –ü–°–ö –ê–î –¢–ì–°–í 1-3 –∫—É—Ä—Å—ã.xls")
        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω —Ç–µ–≥ <a>, –ø–æ–ª—É—á–∞–µ–º –µ–≥–æ URL –∏ –æ–±—ä–µ–¥–∏–Ω—è–µ–º —Å –±–∞–∑–æ–≤—ã–º URL
        if link_tag:
            link_href = link_tag.get("href")
            full_url = urljoin(base_url, link_href)
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª
            save_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps"
            # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
            os.makedirs(save_path, exist_ok=True)
            # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª –ø–æ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–π —Å—Å—ã–ª–∫–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —É–∫–∞–∑–∞–Ω–Ω—É—é –ø–∞–ø–∫—É
            file_path, headers = urlretrieve(full_url, os.path.join(save_path, "raspisonstr.xls"))
        else:
            bot.send_message(call.message.chat.id, '–í—Å–µ –ø–ª–æ—Ö–æ')
        save_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps"
        # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        file_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps\raspisonstr.xlsx"
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
        if os.path.exists(file_path):
            # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º –µ–≥–æ
            os.remove(file_path)
        # –ü—É—Ç—å –∫ —Å–∫—Ä–∏–Ω—à–æ—Ç—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        screenshot_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\raspison_rangestr.png"
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç
        if os.path.exists(screenshot_path):
        # –ï—Å–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º –µ–≥–æ
            os.remove(screenshot_path)
        time.sleep(1)
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º .xls —Ñ–∞–π–ª –≤ .xlsx
        excel = win32.gencache.EnsureDispatch('Excel.Application')
        wb = excel.Workbooks.Open(os.path.join(save_path, "raspisonstr.xls"))
        wb.SaveAs(os.path.join(save_path, "raspisonstr.xlsx"), FileFormat=51)
        wb.Close()
        excel.Quit()
        time.sleep(0.5)
        xlsx_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps\raspisonstr.xlsx"
        client = win32.Dispatch("Excel.Application")
        wb = client.Workbooks.Open(xlsx_path)
        ws = wb.ActiveSheet
        if (course == "1") and (group == "–ü–ì–°"):
            ws.Range("A2:F43").CopyPicture(Format = 2)
            img = ImageGrab.grabclipboard()
            img.save(r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\scrffstr.jpg", "jpeg")
            wb.Close()
            client.Quit()
            markup = types.ForceReply(selective=False)
            markup = types.InlineKeyboardMarkup(row_width=2)
            btn1 = types.InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", callback_data ='back_to_inst')
            btn2 = types.InlineKeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data ='raspis13st')
            btn3 = types.InlineKeyboardButton(text="–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–µ–º–∞ –∑–∞–¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π", callback_data ='back_to_inst')
            btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection1')
            markup.add(btn1, btn2, btn3, btn6)
            bot.send_message(call.message.chat.id, f'–ò —Ç–∞–∫, –≤—ã: {institute} \n–ì—Ä—É–ø–ø–∞: {group} \n–ö—É—Ä—Å: {course}', parse_mode='Markdown')
            # bot.send_message(call.message.chat.id,'*–ò–Ω—Å—Ç–∏—Ç—É—Ç: ' + institute + '*\n*–ì—Ä—É–ø–ø–∞: ' + group + '*\n–ö—É—Ä—Å: ' + course + '*', parse_mode='Markdown')
            bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª', reply_markup=markup, parse_mode='Markdown')
        if (course == "2") and (group == "–ü–ì–°"):
            ws.Range("G2:H42").CopyPicture(Format = 2)
            img = ImageGrab.grabclipboard()
            img.save(r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\scrffstr.jpg", "jpeg")
            wb.Close()
            client.Quit()
            markup = types.ForceReply(selective=False)
            markup = types.InlineKeyboardMarkup(row_width=2)
            btn1 = types.InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", callback_data ='back_to_inst')
            btn2 = types.InlineKeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data ='raspis13st')
            btn3 = types.InlineKeyboardButton(text="–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–µ–º–∞ –∑–∞–¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π", callback_data ='back_to_inst')
            btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection1')
            markup.add(btn1, btn2, btn3, btn6)
            bot.send_message(call.message.chat.id, f'–ò —Ç–∞–∫, –≤—ã: {institute} \n–ì—Ä—É–ø–ø–∞: {group} \n–ö—É—Ä—Å: {course}', parse_mode='Markdown')
            # bot.send_message(call.message.chat.id,'*–ò–Ω—Å—Ç–∏—Ç—É—Ç: ' + institute + '*\n*–ì—Ä—É–ø–ø–∞: ' + group + '*\n–ö—É—Ä—Å: ' + course + '*', parse_mode='Markdown')
            bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª', reply_markup=markup, parse_mode='Markdown')
        if (course == "3") and (group == "–ü–ì–°"):
            ws.Range("I2:J45").CopyPicture(Format = 2)
            img = ImageGrab.grabclipboard()
            img.save(r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\scrffstr.jpg", "jpeg")
            wb.Close()
            client.Quit()
            markup = types.ForceReply(selective=False)
            markup = types.InlineKeyboardMarkup(row_width=2)
            btn1 = types.InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", callback_data ='back_to_inst')
            btn2 = types.InlineKeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data ='raspis13st')
            btn3 = types.InlineKeyboardButton(text="–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–µ–º–∞ –∑–∞–¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π", callback_data ='back_to_inst')
            btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection1')
            markup.add(btn1, btn2, btn3, btn6)
            bot.send_message(call.message.chat.id, f'–ò —Ç–∞–∫, –≤—ã: {institute} \n–ì—Ä—É–ø–ø–∞: {group} \n–ö—É—Ä—Å: {course}', parse_mode='Markdown')
            # bot.send_message(call.message.chat.id,'*–ò–Ω—Å—Ç–∏—Ç—É—Ç: ' + institute + '*\n*–ì—Ä—É–ø–ø–∞: ' + group + '*\n–ö—É—Ä—Å: ' + course + '*', parse_mode='Markdown')
            bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª', reply_markup=markup, parse_mode='Markdown')
        if (course == "1" or course == "2" or course == "3" ) and (group == "–ì–°–•"):
            ws.Range("K2:M45").CopyPicture(Format = 2)
            img = ImageGrab.grabclipboard()
            img.save(r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\scrffstr.jpg", "jpeg")
            wb.Close()
            client.Quit()
            markup = types.ForceReply(selective=False)
            markup = types.InlineKeyboardMarkup(row_width=2)
            btn1 = types.InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", callback_data ='back_to_inst')
            btn2 = types.InlineKeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data ='raspis13st')
            btn3 = types.InlineKeyboardButton(text="–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–µ–º–∞ –∑–∞–¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π", callback_data ='back_to_inst')
            btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection1')
            markup.add(btn1, btn2, btn3, btn6)
            bot.send_message(call.message.chat.id, f'–ò —Ç–∞–∫, –≤—ã: {institute} \n–ì—Ä—É–ø–ø–∞: {group} \n–ö—É—Ä—Å: {course}', parse_mode='Markdown')
            # bot.send_message(call.message.chat.id,'*–ò–Ω—Å—Ç–∏—Ç—É—Ç: ' + institute + '*\n*–ì—Ä—É–ø–ø–∞: ' + group + '*\n–ö—É—Ä—Å: ' + course + '*', parse_mode='Markdown')
            bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª', reply_markup=markup, parse_mode='Markdown')
        if (course == "1" or course == "2" or course == "3" ) and (group == "–¢–ì–°–í"):
            ws.Range("N2:P43").CopyPicture(Format = 2)
            img = ImageGrab.grabclipboard()
            img.save(r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\scrffstr.jpg", "jpeg")
            wb.Close()
            client.Quit()
            markup = types.ForceReply(selective=False)
            markup = types.InlineKeyboardMarkup(row_width=2)
            btn1 = types.InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", callback_data ='back_to_inst')
            btn2 = types.InlineKeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data ='raspis13st')
            btn3 = types.InlineKeyboardButton(text="–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–µ–º–∞ –∑–∞–¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π", callback_data ='back_to_inst')
            btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection1')
            markup.add(btn1, btn2, btn3, btn6)
            bot.send_message(call.message.chat.id, f'–ò —Ç–∞–∫, –≤—ã: {institute} \n–ì—Ä—É–ø–ø–∞: {group} \n–ö—É—Ä—Å: {course}', parse_mode='Markdown')
            # bot.send_message(call.message.chat.id,'*–ò–Ω—Å—Ç–∏—Ç—É—Ç: ' + institute + '*\n*–ì—Ä—É–ø–ø–∞: ' + group + '*\n–ö—É—Ä—Å: ' + course + '*', parse_mode='Markdown')
            bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª', reply_markup=markup, parse_mode='Markdown')
        if (course == "1" or course == "2" ) and (group == "–ü–°–ö"):
            ws.Range("Q2:R42").CopyPicture(Format = 2)
            img = ImageGrab.grabclipboard()
            img.save(r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\scrffstr.jpg", "jpeg")
            wb.Close()
            client.Quit()
            markup = types.ForceReply(selective=False)
            markup = types.InlineKeyboardMarkup(row_width=2)
            btn1 = types.InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", callback_data ='back_to_inst')
            btn2 = types.InlineKeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data ='raspis13st')
            btn3 = types.InlineKeyboardButton(text="–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–µ–º–∞ –∑–∞–¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π", callback_data ='back_to_inst')
            btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection1')
            markup.add(btn1, btn2, btn3, btn6)
            bot.send_message(call.message.chat.id, f'–ò —Ç–∞–∫, –≤—ã: {institute} \n–ì—Ä—É–ø–ø–∞: {group} \n–ö—É—Ä—Å: {course}', parse_mode='Markdown')
            # bot.send_message(call.message.chat.id,'*–ò–Ω—Å—Ç–∏—Ç—É—Ç: ' + institute + '*\n*–ì—Ä—É–ø–ø–∞: ' + group + '*\n–ö—É—Ä—Å: ' + course + '*', parse_mode='Markdown')
            bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª', reply_markup=markup, parse_mode='Markdown')
        if (course == "3" ) and (group == "–ü–°–ö"):
            wb.Close()
            client.Quit()
            markup = types.ForceReply(selective=False)
            markup = types.InlineKeyboardMarkup(row_width=2)
            btn1 = types.InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", callback_data ='back_to_inst')
            btn2 = types.InlineKeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data ='prepod')
            btn3 = types.InlineKeyboardButton(text="–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–µ–º–∞ –∑–∞–¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π", callback_data ='back_to_inst')
            btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection1')
            markup.add(btn1, btn2, btn3, btn6)
            bot.send_message(call.message.chat.id, f'–ò —Ç–∞–∫, –≤—ã: {institute} \n–ì—Ä—É–ø–ø–∞: {group} \n–ö—É—Ä—Å: {course}', parse_mode='Markdown')
            # bot.send_message(call.message.chat.id,'*–ò–Ω—Å—Ç–∏—Ç—É—Ç: ' + institute + '*\n*–ì—Ä—É–ø–ø–∞: ' + group + '*\n–ö—É—Ä—Å: ' + course + '*', parse_mode='Markdown')
            bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª', reply_markup=markup, parse_mode='Markdown')
        if (course == "1" or course == "2" or course == "3" ) and (group == "–ê–î"):
            ws.Range("S2:U44").CopyPicture(Format = 2)
            img = ImageGrab.grabclipboard()
            img.save(r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\scrffstr.jpg", "jpeg")
            wb.Close()
            client.Quit()
            markup = types.ForceReply(selective=False)
            markup = types.InlineKeyboardMarkup(row_width=2)
            btn1 = types.InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π", callback_data ='back_to_inst')
            btn2 = types.InlineKeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data ='raspis13st')
            btn3 = types.InlineKeyboardButton(text="–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–µ–º–∞ –∑–∞–¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π", callback_data ='back_to_inst')
            btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection1')
            markup.add(btn1, btn2, btn3, btn6)
            bot.send_message(call.message.chat.id, f'–ò —Ç–∞–∫, –≤—ã: {institute} \n–ì—Ä—É–ø–ø–∞: {group} \n–ö—É—Ä—Å: {course}', parse_mode='Markdown')
            # bot.send_message(call.message.chat.id,'*–ò–Ω—Å—Ç–∏—Ç—É—Ç: ' + institute + '*\n*–ì—Ä—É–ø–ø–∞: ' + group + '*\n–ö—É—Ä—Å: ' + course + '*', parse_mode='Markdown')
            bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª', reply_markup=markup, parse_mode='Markdown')


@bot.callback_query_handler(func=lambda call: call.data == 'raspis13stF')
def sunmon_menu(call):

    markup = types.InlineKeyboardMarkup(row_width=5)
    btn1 = types.InlineKeyboardButton(text="–ü–Ω", callback_data='mondayst13')
    btn2 = types.InlineKeyboardButton(text="–í—Ç", callback_data='tuesdayst13')
    btn3 = types.InlineKeyboardButton(text="–°—Ä", callback_data="wednesdayst13")
    btn4 = types.InlineKeyboardButton(text="–ß—Ç", callback_data="thursdayst13")
    btn5 = types.InlineKeyboardButton(text="–ü—Ç", callback_data="fridayst13")
    btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='naz_to_first')
    btn7 = types.InlineKeyboardButton(text="–ú–µ–Ω—éüìñ", callback_data ='back_to_menu')
    markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7)
    bot.send_message(call.message.chat.id, '–í—ã–±–∏—Ä–∞–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏\n–£—á—Ç–∏!–ü–æ—Ä—è–¥–æ–∫ —Ç–∞–∫–æ–π: –õ–•, –°–ê–î, –õ–ê', reply_markup=markup, parse_mode='Markdown')

@bot.callback_query_handler(func=lambda call: call.data == 'raspis13st')
def mond13st(call):
    markup = types.InlineKeyboardMarkup(row_width=1)
    btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='bkgru')
    markup.add(btn6)
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    bot.send_photo(call.message.chat.id, open('E:\\otkat\\NvidiaOTK\\Grand Theft Auto  San Andreas\\pybot\\scr\\scrffstr.jpg', 'rb'))
    bot.send_message(call.message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞)', reply_markup=markup, parse_mode='Markdown')

@bot.callback_query_handler(func=lambda call: call.data == 'bkgru')
def bkgru(call):
    perex_to_reg(call)

@bot.callback_query_handler(func=lambda call: call.data == 'naz_to_comis')
def naz_to_comis(call):
    comis_menu(call)

@bot.callback_query_handler(func=lambda call: call.data == 'back_to_inst')
def back_to_inst(call):
    perex_to_reg(call)

                                   #–û–ë–†–ê–ë–û–¢–ö–ê –°–¢–£–î–ï–ù–¢–ê –ò –î–ê–õ–¨–ù–ï–ô–®–ò–ï –ö–ù–û–ü–ö–ò –° –ù–ò–ú

@bot.callback_query_handler(func=lambda call: call.data == 'prepod')
def back_to_inst(call):
    markup = types.InlineKeyboardMarkup(row_width=1)
    btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='naz_to_comis')
    markup.add(btn6)
    bot.send_message(call.message.chat.id, '–ë—É–¥–µ—Ç –¥–æ–ø–æ–ª–Ω—è—Ç—å—Å—è, —Å–µ–π—á–∞—Å —Ç—É—Ç –ø—É—Å—Ç–æ', reply_markup=markup, parse_mode='Markdown')

@bot.callback_query_handler(func=lambda call: call.data == 'prepod')
def back_to_inst(call):
    markup = types.InlineKeyboardMarkup(row_width=1)
    btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='naz_to_comis')
    markup.add(btn6)
    bot.send_message(call.message.chat.id, '–ë—É–¥–µ—Ç –¥–æ–ø–æ–ª–Ω—è—Ç—å—Å—è, —Å–µ–π—á–∞—Å —Ç—É—Ç –ø—É—Å—Ç–æ', reply_markup=markup, parse_mode='Markdown')

@bot.callback_query_handler(func=lambda call: call.data == 'prepod1')
def back_to_inst(call):
    markup = types.InlineKeyboardMarkup(row_width=1)
    btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection1')
    markup.add(btn6)
    bot.send_message(call.message.chat.id, '–ë—É–¥–µ—Ç –¥–æ–ø–æ–ª–Ω—è—Ç—å—Å—è, —Å–µ–π—á–∞—Å —Ç—É—Ç –ø—É—Å—Ç–æ', reply_markup=markup, parse_mode='Markdown')

@bot.callback_query_handler(func=lambda call: call.data == 'prepod2')
def back_to_inst(call):
    markup = types.InlineKeyboardMarkup(row_width=1)
    btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection2')
    markup.add(btn6)
    bot.send_message(call.message.chat.id, '–ë—É–¥–µ—Ç –¥–æ–ø–æ–ª–Ω—è—Ç—å—Å—è, —Å–µ–π—á–∞—Å —Ç—É—Ç –ø—É—Å—Ç–æ', reply_markup=markup, parse_mode='Markdown')

@bot.callback_query_handler(func=lambda call: call.data == 'zadol')
def back_to_inst(call):
    markup = types.InlineKeyboardMarkup(row_width=1)
    btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='naz_to_comis')
    markup.add(btn6)
    bot.send_message(call.message.chat.id, '–ë—É–¥–µ—Ç –¥–æ–ø–æ–ª–Ω—è—Ç—å—Å—è, —Å–µ–π—á–∞—Å —Ç—É—Ç –ø—É—Å—Ç–æ', reply_markup=markup, parse_mode='Markdown')

@bot.callback_query_handler(func=lambda call: call.data == 'zadol1')
def back_to_inst(call):
    markup = types.InlineKeyboardMarkup(row_width=1)
    btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection1')
    markup.add(btn6)
    bot.send_message(call.message.chat.id, '–ë—É–¥–µ—Ç –¥–æ–ø–æ–ª–Ω—è—Ç—å—Å—è, —Å–µ–π—á–∞—Å —Ç—É—Ç –ø—É—Å—Ç–æ', reply_markup=markup, parse_mode='Markdown')

@bot.callback_query_handler(func=lambda call: call.data == 'zadol2')
def back_to_inst(call):
    markup = types.InlineKeyboardMarkup(row_width=1)
    btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='process_group_selection2')
    markup.add(btn6)
    bot.send_message(call.message.chat.id, '–ë—É–¥–µ—Ç –¥–æ–ø–æ–ª–Ω—è—Ç—å—Å—è, —Å–µ–π—á–∞—Å —Ç—É—Ç –ø—É—Å—Ç–æ', reply_markup=markup, parse_mode='Markdown')


@bot.message_handler(content_types=['text'])
def send_text(message):
    if message.text == "–ü—Ä–∏–≤–µ—Ç":
      bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç')
      bot.register_next_step_handler(message, group_menu())


bot.polling()











####################################–ü–†–ï–ü–û–î–û–í–ê–¢–ï–õ–ò##############################

@bot.callback_query_handler(func=lambda call: call.data == 'prepod')
def back_to_inst(call):
    markup = types.InlineKeyboardMarkup(row_width=1)
    btn6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data ='naz_to_comis')
    btn7 = types.InlineKeyboardButton(text="–ú–µ–Ω—éüìñ", callback_data ='back_to_menu')
    markup.add(btn6, btn7)
    bot.send_message(call.message.chat.id, '–ë—É–¥–µ—Ç –¥–æ–ø–æ–ª–Ω—è—Ç—å—Å—è, —Å–µ–π—á–∞—Å —Ç—É—Ç –ø—É—Å—Ç–æ', reply_markup=markup, parse_mode='Markdown')



# –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è

    # base_url = "https://bgitu.ru/studentu/raspisanie/ochnoe-obuchenie/2024/rv-2/"
    # url = "https://bgitu.ru/studentu/raspisanie/ochnoe-obuchenie/2024/rv-2/"  # –≤—Ç–æ—Ä–æ–π —Ä–∞–∑ —É–∫–∞–∑—ã–≤–∞–µ–º url, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Å—ã–ª–∫–∏
    # # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º GET-–∑–∞–ø—Ä–æ—Å –∏ –ø–æ–ª—É—á–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    # response = requests.get(url)
    # html_content = response.content
    # # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç BeautifulSoup –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ HTML
    # soup = BeautifulSoup(html_content, "html.parser")
    # # –ù–∞—Ö–æ–¥–∏–º —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –≤ —Ç–µ–≥–µ <a> —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
    # link_tag = soup.find("a", string="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ 2 —Å–µ–º–µ—Å—Ç—Ä –õ–• –õ–ê –°–ê–î 1-3 –∫—É—Ä—Å—ã.xls")
    # # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω —Ç–µ–≥ <a>, –ø–æ–ª—É—á–∞–µ–º –µ–≥–æ URL –∏ –æ–±—ä–µ–¥–∏–Ω—è–µ–º —Å –±–∞–∑–æ–≤—ã–º URL
    # if link_tag:
    #     link_href = link_tag.get("href")
    #     full_url = urljoin(base_url, link_href)
    #     # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª
    #     save_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps"
    #     # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
    #     os.makedirs(save_path, exist_ok=True)
    #     # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª –ø–æ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–π —Å—Å—ã–ª–∫–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —É–∫–∞–∑–∞–Ω–Ω—É—é –ø–∞–ø–∫—É
    #     file_path, headers = urlretrieve(full_url, os.path.join(save_path, "raspison.xls"))
    # else:
    #     bot.send_message(call.message.chat.id, '–í—Å–µ –ø–ª–æ—Ö–æ')
    # # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    # file_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps\raspison.xlsx"
    # # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
    # if os.path.exists(file_path):
    #     # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º –µ–≥–æ
    #     os.remove(file_path)
    # # –ü—É—Ç—å –∫ —Å–∫—Ä–∏–Ω—à–æ—Ç—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    # screenshot_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\raspison_range.png"
    # # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç
    # if os.path.exists(screenshot_path):
    # # –ï—Å–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º –µ–≥–æ
    #     os.remove(screenshot_path)
    # time.sleep(1)
    # # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º .xls —Ñ–∞–π–ª –≤ .xlsx
    # excel = win32.gencache.EnsureDispatch('Excel.Application')
    # wb = excel.Workbooks.Open(os.path.join(save_path, "raspison.xls"))
    # wb.SaveAs(os.path.join(save_path, "raspison.xlsx"), FileFormat=51)
    # wb.Close()
    # excel.Quit()
    # time.sleep(0.5)
    # xlsx_path = r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\raps\raspison.xlsx"
    # client = win32.Dispatch("Excel.Application")
    # wb = client.Workbooks.Open(xlsx_path)
    # ws = wb.ActiveSheet
    # ws.Range("A2:F11").CopyPicture(Format = 2)
    # img = ImageGrab.grabclipboard()
    # img.save(r"E:\otkat\NvidiaOTK\Grand Theft Auto  San Andreas\pybot\scr\scrff.jpg", "jpeg")
    # wb.Close()
    # client.Quit()
    # # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    # bot.send_photo(call.message.chat.id, open('E:\\otkat\\NvidiaOTK\\Grand Theft Auto  San Andreas\\pybot\\scr\\scrff.jpg', 'rb'))